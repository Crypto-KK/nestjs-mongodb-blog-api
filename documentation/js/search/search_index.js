var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionFilter.html",[0,0.156,1,2.567]],["body/classes/AllExceptionFilter.html",[0,0.182,1,3.875,2,1.14,3,0.195,4,0.228,5,0.228,6,4.394,7,2.985,8,2.918,9,4.879,10,0.333,11,1.389,12,4.097,13,4.394,14,5.755,15,3.871,16,5.163,17,0.448,18,3.386,19,0.825,20,0.025,21,0.622,22,0.409,23,0.825,24,4.394,25,1.004,26,2.447,27,0.428,28,3.875,29,3.386,30,0.771,31,3.486,32,3.875,33,2.686,34,1.678,35,2.447,36,0.262,37,1.919,38,2.985,39,3.386,40,3.386,41,3.386,42,2.985,43,2.985,44,3.386,45,3.994,46,2.686,47,0.014,48,0.018,49,0.014]],["title/modules/AppModule.html",[50,1.044,51,2.31]],["body/modules/AppModule.html",[0,0.145,3,0.156,4,0.182,5,0.182,8,1.798,11,0.856,15,2.148,17,0.359,19,0.66,20,0.025,21,0.497,22,0.327,23,0.66,25,0.803,27,0.491,30,0.616,36,0.21,47,0.011,48,0.016,49,0.011,50,1.562,51,4.54,52,1.437,53,1.437,54,1.662,55,1.662,56,1.437,57,1.662,58,1.662,59,2.708,60,2.708,61,3.411,62,3.713,63,3.713,64,3.713,65,3.411,66,2.32,67,1.662,68,1.662,69,3.194,70,2.732,71,3.194,72,4.459,73,5.56,74,3.194,75,4.459,76,4.459,77,3.194,78,2.387,79,1.752,80,1.543,81,2.708,82,2.708,83,2.148,84,3.194,85,3.194,86,2.387,87,3.194,88,3.194,89,2.708,90,3.194,91,3.194,92,2.387,93,3.194,94,2.708,95,3.194,96,3.194,97,2.732,98,3.194,99,2.708,100,3.194,101,3.194,102,3.194,103,3.194,104,3.194,105,3.194,106,3.194]],["title/modules/AuthModule.html",[50,1.044,61,1.934]],["body/modules/AuthModule.html",[0,0.163,3,0.175,4,0.204,5,0.204,20,0.025,27,0.485,30,0.69,36,0.235,47,0.012,48,0.017,49,0.012,50,1.656,52,1.608,53,1.608,54,1.86,55,1.86,56,1.608,57,2.835,58,2.835,61,3.842,65,3.53,66,2.506,67,1.86,68,1.86,70,2.951,81,3.03,107,3.03,108,3.574,109,3.03,110,3.03,111,3.276,112,3.53,113,3.53,114,3.574,115,3.03,116,3.03,117,2.19,118,3.03,119,2.404,120,2.19,121,3.03,122,3.574,123,3.574,124,3.03,125,2.19,126,3.03,127,2.671,128,2.671,129,3.03,130,3.03,131,3.03]],["title/injectables/AuthService.html",[111,1.659,132,0.709]],["body/injectables/AuthService.html",[0,0.129,3,0.138,4,0.162,5,0.162,10,0.236,11,1.096,12,1.903,17,0.54,19,0.993,20,0.025,21,0.82,22,0.492,23,0.993,25,1.028,27,0.392,30,0.546,36,0.186,37,1.77,47,0.01,48,0.014,49,0.01,111,1.977,119,1.903,125,2.507,132,0.845,133,1.112,134,2.399,135,3.03,136,4.091,137,4.091,138,1.413,139,2.83,140,3.03,141,6.003,142,2.83,143,4.091,144,2.83,145,2.288,146,4.091,147,1.124,148,2.322,149,2.83,150,1.841,151,3.058,152,2.83,153,1.903,154,2.399,155,2.304,156,1.506,157,4.091,158,2.507,159,1.593,160,2.399,161,2.752,162,3.058,163,4.091,164,2.83,165,2.304,166,2.83,167,4.091,168,2.115,169,2.056,170,2.698,171,1.473,172,3.058,173,2.507,174,2.399,175,2.83,176,2.83,177,2.83,178,2.83,179,1.593,180,2.83,181,2.399,182,4.091,183,2.83,184,2.399,185,1.593,186,2.129,187,2.399,188,1.473]],["title/classes/BaseModel.html",[0,0.156,189,2.105]],["body/classes/BaseModel.html",[0,0.187,2,1.173,3,0.201,4,0.235,5,0.235,10,0.343,17,0.691,19,0.848,20,0.025,21,0.64,22,0.597,23,0.848,36,0.27,47,0.014,48,0.018,49,0.014,138,1.418,147,1.126,170,2.818,172,3.946,185,3.818,186,3.035,189,3.235,190,3.482,191,1.943,192,3.946,193,4.871,194,5.279,195,2.375,196,4.108,197,4.108,198,3.071,199,5.279,200,4.108]],["title/classes/ContextTrace.html",[0,0.156,201,2.31]],["body/classes/ContextTrace.html",[0,0.136,2,0.535,3,0.182,4,0.107,5,0.107,10,0.156,17,0.522,19,0.387,20,0.025,21,0.292,22,0.476,23,1.074,27,0.387,34,1.256,36,0.245,37,1.855,43,1.401,47,0.007,48,0.01,49,0.007,97,1.148,138,1.032,147,1.257,156,2.183,158,1.148,169,1.567,173,1.148,191,1.1,195,2.621,198,1.401,201,2.508,202,1.148,203,4.432,204,4.407,205,2.862,206,4.407,207,3.886,208,1.874,209,1.874,210,3.728,211,1.874,212,1.874,213,1.874,214,1.874,215,2.234,216,2.534,217,2.234,218,2.234,219,1.401,220,2.534,221,1.588,222,1.588,223,1.588,224,1.401,225,2.234,226,2.234,227,2.01,228,2.234,229,1.832,230,2.234,231,1.588,232,1.401,233,1.588,234,1.588,235,1.588,236,3.607,237,3.607,238,1.588,239,1.588,240,2.508,241,1.588,242,2.534,243,2.534,244,1.588,245,1.401,246,1.588,247,2.534,248,1.588,249,1.588,250,1.588,251,1.588,252,1.588,253,1.588,254,1.588,255,1.588,256,1.588,257,1.588,258,1.588,259,2.534,260,1.588,261,4.407,262,1.588,263,1.401,264,1.588,265,3.475,266,1.588,267,1.588,268,4.2,269,1.588,270,1.588,271,1.588,272,1.588,273,1.588,274,1.588,275,1.588,276,1.588,277,1.26,278,1.588,279,1.588,280,1.588,281,1.588,282,1.588,283,1.401,284,1.588,285,1.588,286,4.837,287,1.588,288,1.588,289,4.718,290,1.588,291,1.588,292,1.588,293,2.534,294,1.588,295,1.588,296,2.534,297,1.588,298,1.588,299,1.588,300,1.588,301,1.588,302,1.588,303,1.588,304,1.588,305,1.588,306,1.588,307,1.588,308,2.534,309,1.588,310,1.588,311,1.588,312,1.588,313,1.588,314,1.26,315,1.588,316,1.588,317,1.588,318,1.588,319,1.588,320,1.401]],["title/classes/CreatePostDto.html",[0,0.156,321,2.105]],["body/classes/CreatePostDto.html",[0,0.231,2,1.106,3,0.189,4,0.221,5,0.221,10,0.323,17,0.637,20,0.025,22,0.58,27,0.378,36,0.254,47,0.014,48,0.018,49,0.014,147,1.238,171,2.016,191,1.871,321,3.114,322,5.103,323,2.896,324,3.814,325,3.814,326,3.193,327,2.088,328,2.739,329,3.099,330,3.874,331,3.284,332,3.114,333,3.689,334,3.874,335,2.861,336,3.814,337,3.874,338,2.708,339,1.426,340,2.374,341,2.016,342,2.382]],["title/classes/ErrorResponse.html",[0,0.156,343,2.31]],["body/classes/ErrorResponse.html",[0,0.194,2,1.219,3,0.209,4,0.244,5,0.244,10,0.356,17,0.701,19,0.882,20,0.024,21,0.665,22,0.608,23,0.882,27,0.318,36,0.28,47,0.015,48,0.019,49,0.015,138,1.474,147,0.824,170,2.614,171,2.222,185,3.344,186,2.816,189,4.034,191,1.992,192,4.045,193,4.668,195,1.922,343,3.64,344,3.621,345,3.64,346,4.271,347,5.036,348,3.621,349,3.621,350,3.621,351,3.621,352,3.621,353,3.621]],["title/classes/HttpExceptionFilter.html",[0,0.156,354,2.567]],["body/classes/HttpExceptionFilter.html",[0,0.18,2,1.129,3,0.193,4,0.226,5,0.226,7,2.958,8,2.901,9,4.857,10,0.33,11,1.38,12,3.854,13,4.368,15,3.854,16,5.145,17,0.444,18,3.354,19,0.817,20,0.025,21,0.616,22,0.405,23,0.817,24,3.354,25,0.995,27,0.426,28,4.537,30,0.764,31,3.465,32,3.851,33,2.661,34,1.662,35,2.425,36,0.26,37,1.913,38,2.958,39,3.354,40,3.354,41,3.354,42,2.958,44,3.354,46,2.661,47,0.014,48,0.018,49,0.014,188,2.059,229,3.157,354,3.851,355,4.368,356,3.957,357,3.957,358,3.957]],["title/injectables/JwtStrategy.html",[112,1.934,132,0.709]],["body/injectables/JwtStrategy.html",[0,0.182,3,0.196,4,0.229,5,0.229,10,0.334,11,1.391,17,0.583,19,0.827,20,0.025,21,0.809,22,0.41,23,0.827,25,1.007,27,0.454,30,0.773,36,0.263,47,0.014,48,0.018,49,0.014,112,2.924,117,2.455,120,2.455,121,3.396,125,2.455,128,2.994,132,1.073,133,1.574,135,2.999,138,1.99,150,1.802,169,1.475,174,3.396,179,2.255,245,2.994,326,2.255,345,2.694,359,3.396,360,4.403,361,4.006,362,5.194,363,4.006,364,4.006,365,3.396,366,2.994,367,3.396,368,3.396,369,3.396,370,4.006,371,4.006,372,4.006,373,4.006,374,4.006,375,4.006,376,4.006,377,4.006,378,4.006,379,4.006]],["title/injectables/LocalStrategy.html",[113,1.934,132,0.709]],["body/injectables/LocalStrategy.html",[0,0.175,3,0.188,4,0.22,5,0.22,10,0.321,11,1.356,17,0.568,19,1.045,20,0.025,21,0.788,22,0.518,23,1.045,25,0.968,27,0.447,30,0.743,36,0.253,37,1.171,47,0.013,48,0.018,49,0.013,111,3.094,113,2.85,115,3.264,117,2.36,132,1.045,133,1.513,135,2.942,138,1.329,145,2.222,147,1.236,148,2.901,150,1.733,151,3.783,156,1.418,159,2.168,169,1.418,345,2.59,360,4.291,365,3.264,366,2.878,367,3.264,368,3.264,369,3.264,380,3.264,381,3.851,382,3.851,383,5.061,384,3.851,385,3.264,386,5.061,387,2.59,388,3.851,389,3.264,390,2.004]],["title/classes/Logger.html",[0,0.156,34,1.443]],["body/classes/Logger.html",[0,0.123,2,0.474,3,0.214,4,0.095,5,0.095,10,0.139,11,0.727,17,0.617,19,1.134,20,0.025,21,0.855,22,0.562,23,1.134,25,1.38,26,3.272,27,0.368,34,1.444,36,0.226,37,1.802,43,1.242,47,0.006,48,0.009,49,0.006,97,1.018,138,0.574,147,1.185,156,1.461,158,1.662,169,1.461,173,1.018,195,2.227,198,1.242,201,1.824,202,1.018,203,2.966,204,2.914,205,1.118,206,2.914,207,2.569,215,2.028,216,2.3,217,2.028,218,2.028,219,1.242,220,2.3,221,1.409,222,1.409,223,1.409,224,1.242,225,2.028,226,2.966,227,2.669,228,2.966,229,2.431,230,2.966,231,1.409,232,1.242,233,1.409,234,1.409,235,1.409,236,3.363,237,3.363,238,1.409,239,1.409,240,2.669,241,1.409,242,2.3,243,2.3,244,1.409,245,1.242,246,1.409,247,2.3,248,1.409,249,1.409,250,1.409,251,1.409,252,1.409,253,1.409,254,1.409,255,1.409,256,1.409,257,1.409,258,1.409,259,2.3,260,1.409,261,4.195,262,1.409,263,1.242,264,1.409,265,3.268,266,1.409,267,1.409,268,3.977,269,1.409,270,1.409,271,1.409,272,1.409,273,1.409,274,1.409,275,1.409,276,1.409,277,1.824,278,1.409,279,1.409,280,1.409,281,1.409,282,1.409,283,1.242,284,1.409,285,1.409,286,5.614,287,2.3,288,1.409,289,5.254,290,2.3,291,1.409,292,2.3,293,2.3,294,2.3,295,2.3,296,2.3,297,2.3,298,2.3,299,1.409,300,2.3,301,1.409,302,2.3,303,1.409,304,1.409,305,1.409,306,2.3,307,1.409,308,2.3,309,1.409,310,1.409,311,1.409,312,1.409,313,1.409,314,1.118,315,1.409,316,1.409,317,1.409,318,1.409,319,1.409,320,1.242,391,2.3,392,2.713,393,2.713,394,2.713,395,1.662,396,1.662,397,1.662,398,1.662,399,1.662,400,1.662,401,1.662,402,1.662,403,1.662,404,1.662,405,1.662]],["title/injectables/LoggerMiddleware.html",[83,2.31,132,0.709]],["body/injectables/LoggerMiddleware.html",[0,0.169,3,0.182,4,0.212,5,0.212,8,2.093,10,0.31,11,1.325,17,0.417,19,0.768,20,0.025,21,0.579,22,0.381,23,0.768,25,0.934,26,3.405,27,0.413,30,0.954,31,3.326,32,2.779,34,1.562,35,2.278,36,0.244,37,1.504,42,2.779,46,2.501,47,0.013,48,0.017,49,0.013,83,3.326,132,1.021,133,1.461,170,2.979,188,1.935,320,2.779,406,3.152,407,4.945,408,4.945,409,5.557,410,4.427,411,3.718,412,2.278,413,3.152,414,4.945,415,3.718,416,3.718,417,3.718,418,3.718,419,3.718,420,3.718,421,3.718,422,3.718,423,3.718,424,3.718,425,2.501,426,3.718,427,2.501,428,3.718,429,3.718,430,3.152,431,3.718,432,3.718,433,3.718]],["title/classes/LoginUserDto.html",[0,0.156,434,2.31]],["body/classes/LoginUserDto.html",[0,0.241,2,1.18,3,0.202,4,0.236,5,0.236,10,0.345,17,0.595,20,0.025,22,0.542,27,0.394,36,0.271,47,0.014,48,0.018,49,0.014,147,1.191,148,2.826,150,2.632,191,1.951,327,1.951,328,1.997,329,2.981,332,3.781,333,3.585,338,2.632,339,1.522,340,2.533,341,2.151,342,2.227,434,3.565,435,4.96,436,2.781,437,4.134,438,4.134,439,3.505,440,3.962,441,4.134,442,3.505]],["title/controllers/MailController.html",[443,1.787,444,2.31]],["body/controllers/MailController.html",[0,0.183,3,0.197,4,0.23,5,0.23,10,0.336,11,1.397,17,0.453,19,0.833,20,0.025,21,0.628,22,0.413,23,0.833,25,1.013,27,0.471,30,0.778,36,0.265,47,0.014,48,0.018,49,0.014,156,1.484,169,1.484,327,1.484,339,1.484,387,2.711,390,2.098,427,2.711,443,2.098,444,3.507,445,2.098,446,3.417,447,3.013,448,4.031,449,5.215,450,4.031,451,4.361,452,4.031,453,4.031,454,1.947,455,3.255,456,3.417,457,3.013,458,3.898,459,4.031,460,4.031,461,2.47,462,3.417,463,4.031,464,4.031,465,3.013,466,4.031,467,4.031,468,4.031,469,4.031,470,4.031]],["title/modules/MailModule.html",[50,1.044,62,2.105]],["body/modules/MailModule.html",[0,0.176,3,0.189,4,0.221,5,0.221,15,2.606,20,0.025,27,0.448,30,0.748,36,0.254,47,0.014,48,0.018,49,0.014,50,1.724,52,1.743,53,1.743,54,2.016,55,2.016,56,1.743,57,2.951,58,2.951,62,4.006,66,2.644,67,2.016,68,2.016,70,2.374,79,1.522,97,3.114,99,3.284,145,1.522,444,3.814,445,2.644,455,3.865,456,3.284,471,3.284,472,3.284,473,3.284,474,3.874,475,3.874,476,2.896,477,3.874,478,3.874,479,3.874,480,3.874,481,3.874,482,3.874,483,3.874,484,3.874,485,4.308,486,3.874,487,3.874,488,3.874]],["title/injectables/MailService.html",[132,0.709,455,1.934]],["body/injectables/MailService.html",[0,0.169,3,0.181,4,0.212,5,0.212,10,0.309,11,1.322,17,0.554,19,1.019,20,0.025,21,0.769,22,0.505,23,1.019,25,0.932,26,2.272,27,0.413,30,0.715,36,0.243,37,1.127,47,0.013,48,0.017,49,0.013,79,1.457,89,3.143,132,1.019,133,1.457,138,1.28,147,1.284,155,2.087,156,1.365,203,4.148,387,2.493,455,2.779,476,2.771,489,3.143,490,4.936,491,3.707,492,6.336,493,6.467,494,3.707,495,4.936,496,5.916,497,5.916,498,3.707,499,4.936,500,3.707,501,3.707,502,3.707,503,2.771,504,3.707,505,3.707,506,3.707,507,3.707]],["title/classes/Post.html",[0,0.156,454,1.659]],["body/classes/Post.html",[0,0.182,2,1.14,3,0.195,4,0.228,5,0.228,10,0.333,17,0.646,20,0.025,22,0.589,27,0.386,36,0.262,47,0.014,48,0.018,49,0.014,147,1.248,171,2.995,191,1.908,324,3.871,325,3.871,326,3.24,327,2.119,328,1.929,329,3.125,335,2.918,338,2.74,339,1.47,342,2.418,454,2.504,508,3.386,509,4.394,510,3.994,511,3.994,512,3.994,513,3.994,514,5.163,515,2.985]],["title/controllers/PostsController.html",[443,1.787,516,2.31]],["body/controllers/PostsController.html",[0,0.092,3,0.098,4,0.115,5,0.115,10,0.326,11,0.848,17,0.574,19,1.056,20,0.025,21,0.796,22,0.453,23,1.056,25,1.285,27,0.456,30,0.389,36,0.132,37,1.464,47,0.018,48,0.011,49,0.007,79,0.791,80,0.973,135,3.346,138,0.695,145,1.536,147,1.099,155,1.782,156,1.165,159,2.711,161,2.629,162,2.922,169,2.039,172,1.505,188,1.647,321,3.132,327,1.882,335,2.878,338,0.906,339,0.741,343,1.354,390,2.782,412,1.234,425,2.629,427,2.128,443,1.048,445,1.048,447,1.505,454,1.888,457,3.821,458,2.365,461,1.234,462,1.707,465,1.505,516,2.128,517,1.707,518,3.164,519,2.683,520,3.164,521,2.683,522,3.164,523,2.683,524,1.707,525,4.515,526,2.014,527,2.014,528,2.014,529,2.014,530,2.014,531,2.014,532,2.014,533,2.014,534,2.014,535,2.014,536,3.438,537,2.014,538,2.014,539,2.014,540,2.014,541,2.014,542,1.707,543,3.393,544,2.014,545,2.014,546,2.014,547,1.707,548,1.707,549,2.014,550,1.707,551,2.014,552,1.354,553,1.707,554,1.505,555,2.128,556,1.354,557,1.707,558,2.683,559,1.354,560,2.201,561,1.707,562,2.014,563,3.239,564,1.707,565,2.014,566,2.014,567,2.014,568,1.707,569,1.707,570,4.082,571,2.014,572,2.014,573,4.815,574,2.014,575,2.014,576,3.164,577,2.014,578,2.014,579,2.014,580,2.014,581,2.014,582,2.014,583,2.014,584,2.014,585,2.014,586,3.164,587,3.164,588,3.164,589,2.014,590,2.014,591,2.014,592,2.014,593,2.014,594,2.014,595,2.014]],["title/modules/PostsModule.html",[50,1.044,63,2.105]],["body/modules/PostsModule.html",[0,0.192,3,0.206,4,0.241,5,0.241,20,0.025,27,0.477,30,0.814,36,0.277,47,0.015,48,0.019,49,0.015,50,1.795,52,1.897,53,1.897,54,2.193,55,2.193,56,1.897,57,3.072,58,2.193,63,4.021,66,2.793,67,2.193,68,2.193,70,2.583,78,3.151,79,1.657,80,2.036,445,2.793,454,2.036,516,3.971,554,3.151,560,3.694,561,3.573,596,3.573,597,3.573,598,4.215,599,4.215,600,4.215]],["title/injectables/PostsService.html",[132,0.709,560,1.934]],["body/injectables/PostsService.html",[0,0.106,3,0.114,4,0.133,5,0.133,10,0.195,11,0.95,17,0.633,19,1.165,20,0.025,21,0.878,22,0.577,23,1.165,25,1.364,27,0.42,30,0.45,36,0.153,37,1.304,47,0.008,48,0.012,49,0.008,79,1.394,80,1.128,86,1.745,132,0.733,133,0.917,135,3.43,138,1.224,147,1.245,155,1.997,156,1.306,159,3.272,169,2.14,170,1.713,171,1.215,186,1.846,188,1.846,321,3.158,326,3.055,335,2.698,390,1.846,425,1.57,454,1.713,503,2.651,519,3.007,521,3.007,523,3.007,524,3.007,536,3.223,542,3.007,543,3.561,552,1.57,553,1.979,554,1.745,555,3.223,556,1.57,557,1.979,558,3.007,559,1.57,560,1.997,568,1.979,569,3.007,601,1.979,602,3.547,603,3.547,604,2.334,605,5.64,606,2.334,607,2.334,608,3.547,609,2.334,610,3.547,611,2.334,612,3.547,613,2.334,614,3.547,615,2.334,616,2.334,617,2.334,618,2.334,619,2.334,620,3.547,621,2.334,622,2.334,623,2.334,624,2.334,625,2.334,626,2.334,627,2.334,628,2.334,629,4.29,630,2.334,631,2.334,632,2.334,633,2.334,634,2.334,635,2.334,636,2.334]],["title/injectables/RbacInterceptor.html",[132,0.709,637,2.31]],["body/injectables/RbacInterceptor.html",[0,0.188,3,0.202,4,0.236,5,0.236,8,2.328,10,0.345,11,1.42,17,0.595,19,1.095,20,0.024,21,0.825,22,0.542,23,1.095,25,1.039,27,0.394,30,0.798,36,0.271,37,1.257,47,0.014,48,0.018,49,0.014,132,1.095,133,1.625,138,1.427,156,1.522,179,2.984,195,2.632,205,2.781,387,2.781,410,4.373,412,2.533,637,3.565,638,3.505,639,4.493,640,4.134,641,4.134,642,4.493,643,4.612,644,5.231,645,4.134,646,4.96,647,4.134,648,4.493,649,3.09,650,3.505,651,4.134]],["title/classes/RegisterUserDto.html",[0,0.156,652,2.105]],["body/classes/RegisterUserDto.html",[0,0.214,2,0.985,3,0.168,4,0.197,5,0.197,10,0.288,17,0.675,20,0.025,21,0.833,22,0.615,27,0.35,36,0.226,47,0.012,48,0.016,49,0.012,147,1.247,148,2.584,150,2.407,165,3.012,179,3.012,191,1.731,195,2.116,327,2.213,328,2.272,329,2.997,332,3.521,333,3.521,336,4.044,338,2.585,339,1.27,340,2.114,341,1.795,342,2.247,436,2.32,439,2.924,440,2.579,442,2.924,652,2.882,653,5.259,654,4.702,655,3.45,656,3.45,657,3.45,658,5.745,659,3.45,660,3.45,661,3.45,662,3.45,663,3.45,664,3.45,665,4.702,666,3.45]],["title/classes/SendEmailDto.html",[0,0.156,451,2.31]],["body/classes/SendEmailDto.html",[0,0.23,2,1.096,3,0.187,4,0.219,5,0.219,10,0.32,17,0.634,20,0.025,22,0.578,27,0.376,36,0.252,47,0.013,48,0.018,49,0.013,79,1.509,147,1.235,191,1.86,324,3.797,325,3.797,327,2.079,328,2.727,329,3.091,332,2.353,333,3.46,336,2.582,338,2.699,339,1.413,340,3.46,341,1.998,342,2.372,451,3.398,485,3.255,667,5.085,668,3.255,669,5.646,670,3.839,671,3.839,672,3.839,673,5.646,674,3.839,675,3.839,676,3.839]],["title/classes/SuccessResponse.html",[0,0.156,461,2.105]],["body/classes/SuccessResponse.html",[0,0.194,2,1.219,3,0.209,4,0.244,5,0.244,10,0.356,17,0.701,19,0.882,20,0.024,21,0.665,22,0.608,23,0.882,27,0.318,36,0.28,47,0.015,48,0.019,49,0.015,138,1.474,147,0.824,170,2.614,185,3.344,186,2.816,189,4.034,191,1.992,192,4.045,193,4.668,195,1.922,345,3.64,347,5.036,348,3.621,349,3.621,350,3.621,351,3.621,352,3.621,353,3.621,461,3.316,677,3.621,678,4.271,679,3.192]],["title/modules/TasksModule.html",[50,1.044,64,2.105]],["body/modules/TasksModule.html",[0,0.209,3,0.224,4,0.262,5,0.262,20,0.024,27,0.421,30,0.886,36,0.301,47,0.016,48,0.02,49,0.016,50,1.866,52,2.065,53,2.065,54,2.388,55,2.388,56,2.065,57,3.194,58,2.388,64,4.108,66,2.946,67,2.388,68,2.388,680,3.891,681,3.891,682,4.108,683,4.589,684,4.589]],["title/injectables/TasksService.html",[132,0.709,682,2.105]],["body/injectables/TasksService.html",[0,0.203,3,0.218,4,0.255,5,0.255,10,0.372,11,1.49,17,0.501,20,0.025,25,1.122,26,2.735,27,0.451,30,0.861,34,1.875,35,2.735,36,0.293,47,0.016,48,0.019,49,0.016,92,3.336,132,1.149,133,1.754,327,1.643,682,3.409,685,3.783,686,6.345,687,5.563,688,4.463,689,4.463,690,4.463]],["title/injectables/TransformInterceptor.html",[132,0.709,691,2.567]],["body/injectables/TransformInterceptor.html",[0,0.189,3,0.203,4,0.237,5,0.237,8,2.335,10,0.346,11,1.423,17,0.466,19,0.857,20,0.025,21,0.646,22,0.425,23,0.857,25,1.042,27,0.46,30,0.8,34,1.742,35,2.542,36,0.272,37,1.615,46,2.79,47,0.014,48,0.019,49,0.014,132,1.097,133,1.63,169,1.527,205,2.79,410,4.38,412,2.542,639,4.503,642,4.503,643,4.618,644,5.237,646,4.967,648,4.503,649,3.1,650,3.516,691,3.97,692,3.516,693,4.147,694,4.147,695,4.147,696,4.147,697,4.147]],["title/classes/UpdatePostDto.html",[0,0.156,543,2.105]],["body/classes/UpdatePostDto.html",[0,0.238,2,1.158,3,0.198,4,0.232,5,0.232,10,0.338,17,0.651,20,0.025,22,0.593,27,0.39,36,0.266,47,0.014,48,0.018,49,0.014,147,1.254,191,1.928,323,3.032,324,3.9,325,3.9,326,3.264,327,2.135,328,2.801,329,2.529,331,3.439,335,2.948,336,3.9,338,2.757,339,1.493,341,2.111,342,2.436,543,3.209,698,5.194,699,4.056,700,4.056]],["title/classes/UpdateUserDto.html",[0,0.156,701,2.105]],["body/classes/UpdateUserDto.html",[0,0.253,2,1.274,3,0.218,4,0.255,5,0.255,10,0.372,17,0.501,20,0.025,21,0.944,22,0.457,27,0.414,36,0.293,47,0.016,48,0.019,49,0.016,147,1.074,156,2.231,191,2.048,327,1.643,328,2.156,329,2.687,332,3.409,333,3.714,338,2.503,339,1.643,340,2.735,341,2.322,342,1.875,436,3.002,701,3.409,702,4.716,703,4.463]],["title/classes/User.html",[0,0.156,145,1.35]],["body/classes/User.html",[0,0.163,2,1.02,3,0.175,4,0.204,5,0.204,10,0.298,17,0.683,20,0.025,21,0.848,22,0.623,27,0.358,36,0.235,47,0.012,48,0.017,49,0.012,145,1.893,147,1.257,148,2.632,150,2.451,165,3.067,179,3.067,191,1.773,195,2.167,327,2.24,328,1.726,329,3.029,338,2.821,339,1.316,342,2.557,440,2.671,509,4.942,514,5.315,515,2.671,704,3.03,705,3.574,706,4.816,707,3.574,708,4.816,709,3.574,710,3.574,711,3.574,712,3.574]],["title/controllers/UsersController.html",[443,1.787,713,2.31]],["body/controllers/UsersController.html",[0,0.083,3,0.089,4,0.105,5,0.294,10,0.153,11,0.786,17,0.578,19,1.013,20,0.025,21,0.764,22,0.43,23,1.013,25,1.295,27,0.47,28,2.193,29,1.552,30,0.353,33,1.232,36,0.12,37,1.116,47,0.006,48,0.01,49,0.006,79,0.72,80,0.885,94,2.488,111,1.774,135,3.357,140,1.911,145,0.72,147,0.947,150,1.89,155,2.067,156,1.352,158,1.122,159,1.031,160,1.552,161,1.232,162,1.369,169,1.971,170,1.418,171,0.953,185,3.014,186,1.527,188,1.527,207,1.369,263,1.369,265,2.193,277,1.232,314,1.232,327,1.897,339,0.674,389,2.488,390,1.527,412,1.798,427,2.825,434,3.299,443,0.953,445,0.953,447,1.369,454,0.885,457,3.435,458,2.193,465,1.369,503,3.139,547,1.552,548,1.552,550,1.552,552,1.232,555,1.974,556,1.232,559,1.232,563,2.825,564,1.552,570,3.56,637,1.974,652,3.005,679,1.369,701,3.281,713,1.974,714,1.552,715,1.552,716,2.934,717,2.934,718,2.488,719,2.488,720,2.934,721,2.934,722,1.831,723,1.831,724,1.831,725,1.831,726,2.934,727,1.831,728,1.831,729,2.934,730,1.831,731,1.552,732,1.831,733,1.831,734,1.552,735,1.831,736,1.831,737,1.831,738,2.934,739,1.831,740,1.831,741,3.672,742,1.831,743,1.831,744,1.831,745,2.934,746,1.831,747,1.831,748,1.831,749,1.232,750,1.369,751,1.831,752,1.552,753,1.552,754,3.113,755,1.552,756,1.831,757,1.831,758,1.232,759,1.552,760,1.831,761,1.831,762,1.552,763,1.831,764,1.831,765,1.831,766,1.831,767,1.831,768,1.552,769,1.831,770,1.831,771,1.552,772,1.552,773,1.831,774,1.831,775,1.831,776,1.831,777,1.831,778,1.831,779,1.831,780,1.831,781,1.831,782,1.831,783,1.831,784,1.831,785,1.831,786,1.831,787,1.831,788,1.831,789,1.831,790,1.831,791,1.831,792,1.831,793,1.831,794,1.831,795,2.934,796,2.934,797,1.831,798,2.934,799,2.934,800,1.831,801,1.831,802,3.672,803,1.831,804,1.831,805,1.831,806,1.831,807,1.831,808,1.831,809,1.831,810,1.831,811,1.831]],["title/modules/UsersModule.html",[50,1.044,65,1.934]],["body/modules/UsersModule.html",[0,0.153,3,0.164,4,0.191,5,0.191,20,0.025,27,0.499,30,0.647,36,0.22,47,0.012,48,0.016,49,0.012,50,1.602,52,1.508,53,1.508,54,1.744,55,1.744,56,1.508,57,2.742,58,2.742,61,1.887,65,3.805,66,2.399,67,1.744,68,1.744,70,2.054,78,2.505,79,1.317,80,1.619,82,2.841,111,2.971,112,3.462,113,3.462,116,2.841,117,2.054,118,2.841,119,2.254,120,2.054,124,2.841,125,2.054,126,2.841,127,2.505,128,2.505,129,2.841,130,2.841,131,2.841,140,3.492,145,1.317,445,2.399,713,3.544,750,2.505,752,2.841,755,2.841,812,2.841,813,2.841,814,2.841,815,3.351,816,3.351,817,3.351,818,3.351,819,3.351,820,3.351]],["title/injectables/UsersService.html",[132,0.709,140,1.787]],["body/injectables/UsersService.html",[0,0.114,3,0.122,4,0.143,5,0.143,10,0.209,11,1.002,12,1.686,17,0.597,19,1.026,20,0.025,21,0.827,22,0.508,23,1.026,25,1.248,27,0.442,30,0.484,36,0.164,37,1.695,47,0.009,48,0.013,49,0.009,79,0.985,80,1.211,132,0.773,133,0.985,135,3.306,138,0.865,140,1.947,145,0.985,147,1.076,148,1.211,150,2.391,151,3.712,153,1.686,154,2.125,155,1.411,156,0.923,159,3.139,165,2.521,168,1.873,169,2.186,170,2.567,181,2.125,184,3.172,186,2.766,187,2.125,188,1.304,326,1.411,430,2.125,552,1.686,555,3.341,556,1.686,559,1.686,652,3.416,701,3.639,715,3.172,718,3.172,719,3.172,731,3.172,734,3.172,749,1.686,750,1.873,753,2.125,754,3.172,758,1.686,759,2.125,771,2.125,772,3.172,821,2.125,822,3.742,823,4.966,824,2.506,825,2.506,826,3.742,827,2.506,828,2.506,829,2.506,830,2.506,831,2.797,832,4.478,833,3.742,834,2.506,835,2.506,836,2.506,837,2.506,838,2.506,839,2.506,840,2.506,841,3.742,842,2.506,843,2.506,844,2.506,845,2.506]],["title/coverage.html",[846,3.504]],["body/coverage.html",[0,0.299,1,1.945,5,0.149,6,2.206,7,2.876,20,0.025,22,0.266,34,1.617,47,0.009,48,0.013,49,0.009,50,0.791,56,1.171,83,1.75,111,1.257,112,1.465,113,1.465,120,1.594,132,1.288,134,2.206,140,1.354,145,1.023,153,1.75,189,1.594,190,2.206,201,1.75,202,2.806,321,1.594,322,2.206,323,2.876,343,1.75,344,2.206,354,1.945,355,2.206,359,2.206,380,2.206,390,1.354,406,2.206,413,4.289,434,1.75,435,2.206,436,3.08,443,2.383,444,1.75,446,2.206,451,1.75,454,1.257,455,1.465,461,1.594,489,2.206,508,2.206,516,1.75,517,2.206,525,1.945,536,1.75,543,1.594,560,1.465,563,1.75,601,2.206,637,1.75,638,2.206,652,1.594,653,2.206,667,2.206,668,2.206,677,2.206,679,5.27,682,1.594,685,2.206,691,1.945,692,2.206,698,2.206,701,1.594,702,2.206,704,2.206,713,1.75,714,2.206,749,1.75,758,1.75,821,2.206,831,1.945,846,1.945,847,2.602,848,2.602,849,2.602,850,3.262,851,6.131,852,2.206,853,6.326,854,2.206,855,5.399,856,2.206,857,5.399,858,2.206,859,2.206,860,2.206,861,5.848,862,2.876,863,4.578,864,2.602,865,3.848,866,2.206,867,5.059,868,2.206,869,3.262,870,3.848,871,3.848,872,2.602,873,2.602,874,2.602]],["title/dependencies.html",[53,1.859,875,2.868]],["body/dependencies.html",[0,0.213,20,0.025,30,0.662,33,3.588,47,0.012,48,0.016,49,0.012,53,1.544,79,2.097,80,1.658,86,3.502,92,2.565,117,2.103,119,2.308,125,2.103,161,2.308,215,2.565,217,2.565,218,2.565,219,2.565,339,1.263,341,1.786,366,3.988,385,2.909,476,2.565,515,2.565,649,2.565,762,2.909,768,2.909,876,3.431,877,5.335,878,3.431,879,4.685,880,3.431,881,3.431,882,3.431,883,3.431,884,3.431,885,3.431,886,3.431,887,4.685,888,4.685,889,3.431,890,3.431,891,3.431,892,3.431,893,3.431,894,3.431,895,3.431,896,3.431,897,3.431,898,3.431,899,3.431,900,3.431,901,3.431,902,3.431,903,3.431,904,3.431,905,3.431,906,3.431,907,3.431,908,3.431,909,3.431,910,3.431,911,3.431,912,3.431,913,3.431,914,3.431,915,3.431,916,3.431,917,3.431,918,3.431,919,3.431,920,3.431,921,3.431,922,3.431,923,2.909,924,2.909,925,5.732,926,3.431,927,3.431,928,3.431,929,3.431,930,3.431,931,3.431,932,3.431,933,3.431,934,3.431,935,3.431,936,3.431,937,3.431,938,3.431]],["title/miscellaneous/enumerations.html",[939,1.615,940,3.502]],["body/miscellaneous/enumerations.html",[3,0.282,10,0.396,20,0.024,47,0.017,48,0.02,49,0.017,202,2.905,224,4.316,225,4.316,226,4.316,227,3.884,228,4.316,229,3.538,230,4.316,240,4.676,939,2.669,940,4.019,941,4.019]],["title/miscellaneous/functions.html",[939,1.615,942,3.502]],["body/miscellaneous/functions.html",[10,0.391,19,0.969,20,0.024,21,0.73,23,0.969,25,1.442,47,0.016,48,0.02,49,0.016,56,2.788,147,1.107,148,2.771,153,3.858,165,3.489,168,3.505,342,1.97,563,4.168,831,4.632,858,3.976,862,3.505,869,3.976,939,2.64,942,3.976,943,3.976,944,5.736,945,4.689,946,4.689,947,4.689]],["title/index.html",[10,0.239,948,2.868,949,2.868]],["body/index.html",[4,0.225,20,0.024,47,0.014,48,0.018,49,0.014,232,4.27,342,1.652,846,2.94,923,3.334,924,3.334,950,3.933,951,3.933,952,5.132,953,3.933,954,3.933,955,3.933,956,3.933,957,3.933,958,3.933,959,3.933,960,3.933,961,3.933,962,3.933,963,3.933,964,3.933,965,6.56,966,3.933,967,3.334,968,3.933,969,6.441,970,3.933,971,5.132,972,3.933,973,3.933,974,3.933,975,3.933,976,5.132,977,5.132,978,3.933,979,3.933,980,3.933,981,5.132,982,5.132,983,3.933,984,3.933,985,3.933,986,3.933,987,3.933,988,3.334,989,3.933,990,3.933,991,3.933,992,3.933,993,3.933,994,3.933,995,3.933,996,3.933,997,3.933,998,3.933,999,3.933,1000,3.933,1001,3.933,1002,3.933,1003,3.933,1004,3.933,1005,3.933,1006,3.933]],["title/modules.html",[52,2.109]],["body/modules.html",[20,0.02,47,0.017,48,0.02,49,0.017,51,3.285,52,2.198,61,2.75,62,2.993,63,2.993,64,2.993,65,2.75,988,5.767,1007,6.803,1008,6.803,1009,6.803]],["title/overview.html",[1010,3.975]],["body/overview.html",[2,0.979,20,0.024,47,0.012,48,0.016,49,0.012,50,1.043,51,4.531,52,1.544,53,1.544,54,1.786,55,1.786,56,1.544,57,1.786,58,1.786,59,2.909,60,2.909,61,3.793,62,3.796,63,3.677,64,3.677,65,3.818,66,2.438,67,1.786,68,1.786,107,2.909,109,2.909,110,2.909,111,3.118,112,3.228,113,3.228,133,1.349,140,3.299,173,2.103,445,1.786,455,3.569,471,2.909,472,2.909,473,2.909,560,3.004,596,2.909,597,2.909,680,2.909,681,2.909,682,3.269,812,2.909,813,2.909,814,2.909,1010,2.909,1011,3.431,1012,3.431,1013,3.431]],["title/miscellaneous/variables.html",[939,1.615,1014,3.502]],["body/miscellaneous/variables.html",[3,0.208,10,0.193,20,0.025,21,0.36,22,0.63,31,2.369,34,1.48,37,1.297,38,2.633,47,0.015,48,0.012,49,0.008,50,1.071,97,3.445,120,2.159,127,1.729,145,1.677,147,0.991,148,1.117,150,1.041,158,1.417,165,1.302,169,1.297,171,2.22,173,2.614,179,1.302,185,2.402,195,1.585,202,1.417,227,2.369,229,1.417,240,3.898,277,3.993,283,1.729,314,2.869,335,1.302,390,1.204,391,3.617,425,1.556,525,2.633,536,2.369,643,2.633,749,2.369,758,2.369,850,1.961,852,2.986,854,2.986,856,1.961,859,1.961,860,1.961,862,1.729,866,1.961,868,1.961,939,1.302,941,1.961,943,1.961,967,4.043,1014,1.961,1015,3.522,1016,2.313,1017,2.313,1018,2.313,1019,2.313,1020,2.313,1021,2.313,1022,2.313,1023,4.266,1024,5.133,1025,5.133,1026,4.266,1027,2.313,1028,2.313,1029,4.266,1030,5.622,1031,4.266,1032,4.266,1033,4.266,1034,4.266,1035,2.313,1036,3.522,1037,4.266,1038,2.313,1039,2.313,1040,3.522,1041,3.522,1042,3.522,1043,3.522,1044,3.522,1045,2.313,1046,4.769,1047,2.313,1048,5.133,1049,2.313,1050,2.313,1051,4.266,1052,2.313,1053,2.313,1054,3.522,1055,3.522,1056,2.313,1057,2.313,1058,2.313,1059,2.313,1060,2.313,1061,3.522,1062,2.313,1063,2.313,1064,3.522,1065,2.313,1066,2.313,1067,2.313,1068,2.313]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":679,"title":{},"body":{"classes/SuccessResponse.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["0.1.13",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":861,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":863,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["1'})@isstring",{"_index":330,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1'})@prop",{"_index":511,"title":{},"body":{"classes/Post.html":{}}}],["1.0.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["1.2.8",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["1.7.2",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1012,"title":{},"body":{"overview.html":{}}}],["100",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["10485760",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":658,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["15",{"_index":1013,"title":{},"body":{"overview.html":{}}}],["1为普通用户，2",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["2",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["2.0.2",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["2.27.0",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":666,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["20)@isstring",{"_index":655,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["200",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["3",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["3.3.12",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["3fdfaf",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["4",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["4.0.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["4.44.0",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":430,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/UsersService.html":{}}}],["465",{"_index":481,"title":{},"body":{"modules/MailModule.html":{}}}],["5.1.3",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["5.7.32",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["5.9.25",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["503",{"_index":840,"title":{},"body":{"injectables/UsersService.html":{}}}],["6",{"_index":1011,"title":{},"body":{"overview.html":{}}}],["6.2.2",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["6.4.10",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6379",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["7.0.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["7.1.28",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["705555262@qq.com",{"_index":485,"title":{},"body":{"modules/MailModule.html":{},"classes/SendEmailDto.html":{}}}],["705555262@qq.com'})@isnotempty({message",{"_index":672,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["8h",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["access",{"_index":391,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["access(...args",{"_index":302,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["access.20200320.log",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allexceptionfilter",{"_index":1,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["alwaysincludepattern",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":989,"title":{},"body":{"index.html":{}}}],["angular",{"_index":960,"title":{},"body":{"index.html":{}}}],["api",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["api/upload",{"_index":798,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibearerauth",{"_index":551,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiconsumes",{"_index":751,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiconsumes('multipart/form",{"_index":800,"title":{},"body":{"controllers/UsersController.html":{}}}],["apioperation",{"_index":457,"title":{},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":465,"title":{},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":338,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apiproperty({description",{"_index":328,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["apitags",{"_index":458,"title":{},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["app",{"_index":967,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["appender",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appenders",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":957,"title":{},"body":{"index.html":{}}}],["apply(loggermiddleware",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":289,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":484,"title":{},"body":{"modules/MailModule.html":{}}}],["auth.service",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["auth/auth.service",{"_index":755,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["auth/constants",{"_index":817,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/jwt.strategy",{"_index":819,"title":{},"body":{"modules/UsersModule.html":{}}}],["auth/local.strategy",{"_index":818,"title":{},"body":{"modules/UsersModule.html":{}}}],["authmodule",{"_index":61,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":999,"title":{},"body":{"index.html":{}}}],["authresult",{"_index":779,"title":{},"body":{"controllers/UsersController.html":{}}}],["authresult.code",{"_index":783,"title":{},"body":{"controllers/UsersController.html":{}}}],["authservice",{"_index":111,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":990,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":745,"title":{},"body":{"controllers/UsersController.html":{}}}],["base.model",{"_index":351,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["baselogpath",{"_index":852,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baselogpath}/access/access.log",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baselogpath}/app",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baselogpath}/errors/error.log",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basemodel",{"_index":189,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{},"coverage.html":{}}}],["basemodel:2",{"_index":350,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["basemodel:3",{"_index":349,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["basemodel:4",{"_index":348,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["basename",{"_index":316,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["basename}(line",{"_index":318,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["blog",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["body",{"_index":427,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":268,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["browse",{"_index":1009,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1007,"title":{},"body":{"modules.html":{}}}],["building",{"_index":953,"title":{},"body":{"index.html":{}}}],["cache",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["callhandler",{"_index":644,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["case",{"_index":265,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/UsersService.html":{}}}],["catch(err",{"_index":506,"title":{},"body":{"injectables/MailService.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":356,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb",{"_index":795,"title":{},"body":{"controllers/UsersController.html":{}}}],["cb(null",{"_index":796,"title":{},"body":{"controllers/UsersController.html":{}}}],["certificate",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["certificate(user",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["chalk",{"_index":220,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.cyan(leveloutput",{"_index":270,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(leveloutput",{"_index":267,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(typeoutput)}${dateoutput",{"_index":279,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.grey(leveloutput",{"_index":278,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.hex('#dd4c35')(leveloutput",{"_index":276,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.red(leveloutput",{"_index":274,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow",{"_index":280,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow(leveloutput",{"_index":272,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionFilter.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"classes/Logger.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"classes/Logger.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cli",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["client",{"_index":358,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cluster_appmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":471,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":472,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":473,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":596,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_providers",{"_index":597,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":680,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":681,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":812,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":813,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":814,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"injectables/LoggerMiddleware.html":{},"injectables/PostsService.html":{},"classes/SuccessResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["column",{"_index":319,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["columnnumber",{"_index":204,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["compression",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":617,"title":{},"body":{"injectables/PostsService.html":{}}}],["conditions['content",{"_index":623,"title":{},"body":{"injectables/PostsService.html":{}}}],["conditions['title",{"_index":619,"title":{},"body":{"injectables/PostsService.html":{}}}],["config",{"_index":221,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["config/.../log4js.ts",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/log4js",{"_index":222,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["config/log4js.ts",{"_index":850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":493,"title":{},"body":{"injectables/MailService.html":{}}}],["configure",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["console",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error(err",{"_index":507,"title":{},"body":{"injectables/MailService.html":{}}}],["console.log('step",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`step",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["const",{"_index":37,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constants/role.constants",{"_index":759,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/ErrorResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/SuccessResponse.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(userschema",{"_index":771,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":381,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(context",{"_index":208,"title":{},"body":{"classes/ContextTrace.html":{}}}],["constructor(data",{"_index":192,"title":{},"body":{"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["constructor(mailerservice",{"_index":491,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(postmodel",{"_index":604,"title":{},"body":{"injectables/PostsService.html":{}}}],["constructor(private",{"_index":387,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/RbacInterceptor.html":{}}}],["constructor(role",{"_index":640,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["constructor(usermodel",{"_index":824,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["content",{"_index":324,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{}}}],["context",{"_index":205,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getargbyindex(1).req",{"_index":650,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["contexttrace",{"_index":201,"title":{"classes/ContextTrace.html":{}},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{}}}],["controller",{"_index":443,"title":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('mail",{"_index":463,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('posts",{"_index":567,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":770,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":445,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["count",{"_index":834,"title":{},"body":{"injectables/UsersService.html":{}}}],["coverage",{"_index":846,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":519,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["create(@body",{"_index":574,"title":{},"body":{"controllers/PostsController.html":{}}}],["create(createpostdto",{"_index":524,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["createparamdecorator",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpostdto",{"_index":321,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["createpostdto.userid",{"_index":575,"title":{},"body":{"controllers/PostsController.html":{}}}],["createwritestream",{"_index":763,"title":{},"body":{"controllers/UsersController.html":{}}}],["createwritestream(path.join('/users/kk/nodejs/nest/nest",{"_index":809,"title":{},"body":{"controllers/UsersController.html":{}}}],["cron",{"_index":689,"title":{},"body":{"injectables/TasksService.html":{}}}],["cron('45",{"_index":687,"title":{},"body":{"injectables/TasksService.html":{}}}],["csurf",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":38,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":41,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":40,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":625,"title":{},"body":{"injectables/PostsService.html":{}}}],["currentuser",{"_index":525,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentuser.userid",{"_index":576,"title":{},"body":{"controllers/PostsController.html":{}}}],["data",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["data.name",{"_index":802,"title":{},"body":{"controllers/UsersController.html":{}}}],["date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date.now",{"_index":810,"title":{},"body":{"controllers/UsersController.html":{}}}],["datefile",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateoutput",{"_index":253,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["daystokeep",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":257,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["debug",{"_index":227,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["debug(...args",{"_index":290,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["declarations",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/auth.decorator",{"_index":564,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["decorator/pagination.decorator",{"_index":566,"title":{},"body":{"controllers/PostsController.html":{}}}],["decorator/user.decorator",{"_index":562,"title":{},"body":{"controllers/PostsController.html":{}}}],["decorators",{"_index":327,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"injectables/TasksService.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["deep",{"_index":400,"title":{},"body":{"classes/Logger.html":{}}}],["default",{"_index":277,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["default_from",{"_index":499,"title":{},"body":{"injectables/MailService.html":{}}}],["defaults",{"_index":488,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":546,"title":{},"body":{"controllers/PostsController.html":{}}}],["delete(':id",{"_index":589,"title":{},"body":{"controllers/PostsController.html":{}}}],["deletebyid",{"_index":602,"title":{},"body":{"injectables/PostsService.html":{}}}],["deletebyid(id",{"_index":608,"title":{},"body":{"injectables/PostsService.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":342,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["destination",{"_index":794,"title":{},"body":{"controllers/UsersController.html":{}}}],["detail",{"_index":520,"title":{},"body":{"controllers/PostsController.html":{}}}],["detail(@param('id",{"_index":579,"title":{},"body":{"controllers/PostsController.html":{}}}],["detail(id",{"_index":528,"title":{},"body":{"controllers/PostsController.html":{}}}],["development",{"_index":968,"title":{},"body":{"index.html":{}}}],["doc",{"_index":765,"title":{},"body":{"controllers/UsersController.html":{}}}],["documentation",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["dtos/create",{"_index":557,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["dtos/login",{"_index":756,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/register",{"_index":753,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/send",{"_index":459,"title":{},"body":{"controllers/MailController.html":{}}}],["dtos/update",{"_index":559,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":978,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":954,"title":{},"body":{"index.html":{}}}],["email",{"_index":669,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["email.dto",{"_index":460,"title":{},"body":{"controllers/MailController.html":{}}}],["email.dto.ts",{"_index":668,"title":{},"body":{"classes/SendEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:11",{"_index":674,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["email.dto.ts:20",{"_index":676,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["email.dto.ts:28",{"_index":671,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["encrypt",{"_index":946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptpassword",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encryptpassword(password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":223,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["enumerations",{"_index":940,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":229,"title":{},"body":{"classes/ContextTrace.html":{},"classes/HttpExceptionFilter.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(...args",{"_index":298,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["errorfile",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":343,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ErrorResponse.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["errorresponse(null",{"_index":587,"title":{},"body":{"controllers/PostsController.html":{}}}],["errors",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":329,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:7",{"_index":18,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":44,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":643,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":33,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":345,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/SuccessResponse.html":{}}}],["externals",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["extractjwt",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":245,"title":{},"body":{"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{}}}],["fatal",{"_index":230,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(...args",{"_index":300,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.originalname",{"_index":799,"title":{},"body":{"controllers/UsersController.html":{}}}],["fileinterceptor",{"_index":760,"title":{},"body":{"controllers/UsersController.html":{}}}],["filename",{"_index":314,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":741,"title":{},"body":{"controllers/UsersController.html":{}}}],["files.length",{"_index":806,"title":{},"body":{"controllers/UsersController.html":{}}}],["filesinterceptor",{"_index":761,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":603,"title":{},"body":{"injectables/PostsService.html":{}}}],["findbyid(id",{"_index":610,"title":{},"body":{"injectables/PostsService.html":{}}}],["findbyusername",{"_index":822,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyusername(username",{"_index":826,"title":{},"body":{"injectables/UsersService.html":{}}}],["forbiddenexception",{"_index":647,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["forroutes",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["framework",{"_index":952,"title":{},"body":{"index.html":{}}}],["fs",{"_index":764,"title":{},"body":{"controllers/UsersController.html":{}}}],["function",{"_index":413,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":942,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\":id",{"_index":578,"title":{},"body":{"controllers/PostsController.html":{}}}],["get(':id')@apioperation({summary",{"_index":529,"title":{},"body":{"controllers/PostsController.html":{}}}],["get(':username",{"_index":785,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":537,"title":{},"body":{"controllers/PostsController.html":{}}}],["getbyusername",{"_index":716,"title":{},"body":{"controllers/UsersController.html":{}}}],["getbyusername(@param(\"username",{"_index":786,"title":{},"body":{"controllers/UsersController.html":{}}}],["getbyusername(username",{"_index":722,"title":{},"body":{"controllers/UsersController.html":{}}}],["getmyposts",{"_index":521,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["getmyposts(@currentuser",{"_index":594,"title":{},"body":{"controllers/PostsController.html":{}}}],["getmyposts(currentuser",{"_index":531,"title":{},"body":{"controllers/PostsController.html":{}}}],["getmyposts(userid",{"_index":612,"title":{},"body":{"injectables/PostsService.html":{}}}],["getstacktrace",{"_index":392,"title":{},"body":{"classes/Logger.html":{}}}],["getstacktrace(deep",{"_index":306,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["getting",{"_index":948,"title":{"index.html":{}},"body":{}}],["grow",{"_index":985,"title":{},"body":{"index.html":{}}}],["handlecron",{"_index":686,"title":{},"body":{"injectables/TasksService.html":{}}}],["hashedpassword",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["heavily",{"_index":958,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":996,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":258,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{}}}],["host.switchtohttp",{"_index":39,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{}}}],["http",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":28,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["httpexceptionfilter",{"_index":354,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":1003,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":807,"title":{},"body":{"controllers/UsersController.html":{}}}],["httpstatus.internal_server_error",{"_index":45,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["id",{"_index":335,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["ignoreexpiration",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoretls",{"_index":482,"title":{},"body":{"modules/MailModule.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index(@query",{"_index":571,"title":{},"body":{"controllers/PostsController.html":{}}}],["index(query",{"_index":535,"title":{},"body":{"controllers/PostsController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info(...args",{"_index":294,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["inherited",{"_index":347,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["injectable",{"_index":132,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":552,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["injectmodel(postschema",{"_index":568,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["inspired",{"_index":959,"title":{},"body":{"index.html":{}}}],["installation",{"_index":964,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":966,"title":{},"body":{"index.html":{}}}],["instance_id",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":43,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["intercept",{"_index":639,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":642,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interceptor/rbac.interceptor",{"_index":757,"title":{},"body":{"controllers/UsersController.html":{}}}],["ip",{"_index":421,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["isemail",{"_index":673,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["isempty",{"_index":336,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{}}}],["isglobal",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":340,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty({message",{"_index":332,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring",{"_index":333,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@apiproperty({description",{"_index":439,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isstring()@isnotempty",{"_index":670,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["join",{"_index":992,"title":{},"body":{"index.html":{}}}],["js",{"_index":219,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["json.stringify(req.body",{"_index":428,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["json.stringify(req.params",{"_index":424,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["json.stringify(req.query",{"_index":426,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jwt",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["jwtfromrequest",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtservice",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":112,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1000,"title":{},"body":{"index.html":{}}}],["keepfileext",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kk",{"_index":440,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["kk'})@length(6",{"_index":662,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["kk'})@prop",{"_index":711,"title":{},"body":{"classes/User.html":{}}}],["layout",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legend",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":664,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["length(1",{"_index":654,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["length(6",{"_index":665,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["level",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leveloutput",{"_index":261,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leveloutput}${positionoutput",{"_index":281,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["license",{"_index":1006,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":982,"title":{},"body":{"index.html":{}}}],["limit",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["linenumber",{"_index":206,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["list",{"_index":503,"title":{},"body":{"injectables/MailService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["list(query",{"_index":614,"title":{},"body":{"injectables/PostsService.html":{}}}],["listuser",{"_index":823,"title":{},"body":{"injectables/UsersService.html":{}}}],["liyuankun234",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loader",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":385,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":113,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":393,"title":{},"body":{"classes/Logger.html":{}}}],["log(...args",{"_index":292,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js",{"_index":215,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["log4js.addlayout('awesome",{"_index":231,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.configure(config",{"_index":282,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.getlogger",{"_index":283,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log4js.getlogger('http",{"_index":304,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.loggingevent",{"_index":235,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4jsconfig",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logconfig",{"_index":233,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig.type",{"_index":251,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent",{"_index":234,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.data.foreach((value",{"_index":239,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level",{"_index":262,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level.tostring",{"_index":264,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.pid.tostring",{"_index":252,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logformat",{"_index":46,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TransformInterceptor.html":{}}}],["logger",{"_index":34,"title":{"classes/Logger.html":{}},"body":{"classes/AllExceptionFilter.html":{},"classes/ContextTrace.html":{},"classes/HttpExceptionFilter.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.access(logformat",{"_index":432,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.debug(\"每45",{"_index":690,"title":{},"body":{"injectables/TasksService.html":{}}}],["logger.debug(logger.getstacktrace",{"_index":291,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error(logformat",{"_index":429,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.error(logger.getstacktrace",{"_index":299,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.fatal(logger.getstacktrace",{"_index":301,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.info(logger.getstacktrace",{"_index":293,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.level",{"_index":284,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.log(logformat",{"_index":433,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.trace(logger.getstacktrace",{"_index":288,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.warn(logformat",{"_index":431,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger.warn(logger.getstacktrace",{"_index":296,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggercustom",{"_index":303,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggercustom.info(logger.getstacktrace",{"_index":305,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel",{"_index":224,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loggerlevel.debug",{"_index":266,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.error",{"_index":273,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.fatal",{"_index":275,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.info",{"_index":269,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.trace",{"_index":285,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.warn",{"_index":271,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggermiddleware",{"_index":83,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggerservice",{"_index":260,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["login",{"_index":717,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(@body",{"_index":778,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(loginuserdto",{"_index":728,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginrequired",{"_index":563,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loginrequired()@delete(':id')@apioperation({summary",{"_index":540,"title":{},"body":{"controllers/PostsController.html":{}}}],["loginrequired()@get(':username')@apioperation({summary",{"_index":723,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginrequired()@get()@apioperation({summary",{"_index":725,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginrequired()@post('my",{"_index":532,"title":{},"body":{"controllers/PostsController.html":{}}}],["loginrequired()@post()@apioperation({summary",{"_index":526,"title":{},"body":{"controllers/PostsController.html":{}}}],["loginrequired()@put(':id')@apioperation({summary",{"_index":544,"title":{},"body":{"controllers/PostsController.html":{}}}],["loginrequired()@put(':username')@apioperation({summary",{"_index":735,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuserdto",{"_index":434,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["loginuserdto.password",{"_index":782,"title":{},"body":{"controllers/UsersController.html":{}}}],["loginuserdto.username",{"_index":781,"title":{},"body":{"controllers/UsersController.html":{}}}],["loglevelfilter",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mail",{"_index":448,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":477,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":456,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":444,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":475,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forroot",{"_index":478,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":492,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":62,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":455,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesalt",{"_index":831,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["manager",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["map",{"_index":694,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":697,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["mark",{"_index":225,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":48,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlogsize",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":193,"title":{},"body":{"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["messagelist",{"_index":238,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.join",{"_index":248,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.push(value",{"_index":246,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messageoutput",{"_index":247,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["metadata",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":419,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middleware/logger.middleware",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewareconsumer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":939,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":981,"title":{},"body":{"index.html":{}}}],["mm",{"_index":256,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["mode",{"_index":971,"title":{},"body":{"index.html":{}}}],["model/error.model",{"_index":565,"title":{},"body":{"controllers/PostsController.html":{}}}],["model/success.model",{"_index":462,"title":{},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{}}}],["modeltype",{"_index":555,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modulename",{"_index":236,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["moduleoutput",{"_index":259,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":476,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["moment",{"_index":217,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["moment(logevent.starttime).format",{"_index":254,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["mongoose",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["mongoose.schema",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":995,"title":{},"body":{"index.html":{}}}],["msg",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ErrorResponse.html":{},"injectables/PostsService.html":{},"classes/SuccessResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["multer",{"_index":768,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["multer.diskstorage",{"_index":793,"title":{},"body":{"controllers/UsersController.html":{}}}],["myśliwiec",{"_index":1001,"title":{},"body":{"index.html":{}}}],["n",{"_index":320,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SuccessResponse.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":232,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"index.html":{}}}],["nestframework",{"_index":1005,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":648,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"classes/SendEmailDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{}}}],["nestjs/core",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":762,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":339,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs测试邮件'})@isstring()@isnotempty",{"_index":675,"title":{},"body":{"classes/SendEmailDto.html":{}}}],["nestmiddleware",{"_index":414,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":390,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":410,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":696,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["node",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":951,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":965,"title":{},"body":{"index.html":{}}}],["null",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"controllers/PostsController.html":{}}}],["numbackups",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":195,"title":{},"body":{"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/ErrorResponse.html":{},"classes/Logger.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SuccessResponse.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["number.parseint(query.current",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number.parseint(query.pagesize",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":646,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["ok",{"_index":581,"title":{},"body":{"controllers/PostsController.html":{}}}],["oldpost",{"_index":630,"title":{},"body":{"injectables/PostsService.html":{}}}],["oldpost.userid",{"_index":631,"title":{},"body":{"injectables/PostsService.html":{}}}],["open",{"_index":983,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/SuccessResponse.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":416,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out/app.log",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":1010,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":875,"title":{"dependencies.html":{}},"body":{}}],["pagesize",{"_index":626,"title":{},"body":{"injectables/PostsService.html":{}}}],["pagination",{"_index":536,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":547,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/SuccessResponse.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parmas",{"_index":423,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["pass",{"_index":486,"title":{},"body":{"modules/MailModule.html":{}}}],["passport",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":207,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{}}}],["path.basename(filename",{"_index":317,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.join('/users/kk/nodejs/nest/nest",{"_index":797,"title":{},"body":{"controllers/UsersController.html":{}}}],["path.resolve(__dirname",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":993,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["pm2",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pm2instancevar",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["position",{"_index":237,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["positionoutput",{"_index":249,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["post",{"_index":454,"title":{"classes/Post.html":{}},"body":{"controllers/MailController.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["post(\"my",{"_index":593,"title":{},"body":{"controllers/PostsController.html":{}}}],["post(\"send",{"_index":464,"title":{},"body":{"controllers/MailController.html":{}}}],["post(\"upload",{"_index":790,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('login",{"_index":729,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('mul",{"_index":738,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('register",{"_index":775,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('register')@apioperation({summary",{"_index":732,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('send')@apioperation({summary",{"_index":452,"title":{},"body":{"controllers/MailController.html":{}}}],["post('upload')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":743,"title":{},"body":{"controllers/UsersController.html":{}}}],["post.dto",{"_index":558,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":323,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":334,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:12",{"_index":699,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["post.dto.ts:19",{"_index":331,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/UpdatePostDto.html":{}}}],["post.dto.ts:26",{"_index":337,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:8",{"_index":700,"title":{},"body":{"classes/UpdatePostDto.html":{}}}],["post.model",{"_index":554,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{}}}],["post.userid",{"_index":634,"title":{},"body":{"injectables/PostsService.html":{}}}],["postmodel",{"_index":569,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["posts",{"_index":518,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts')@apioperation({summary",{"_index":533,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":599,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts.service",{"_index":561,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["postschema",{"_index":553,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["postscontroller",{"_index":516,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":63,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":560,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":447,"title":{},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["prettier",{"_index":766,"title":{},"body":{"controllers/UsersController.html":{}}}],["private",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":973,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":950,"title":{},"body":{"index.html":{}}}],["project",{"_index":984,"title":{},"body":{"index.html":{}}}],["promise",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":514,"title":{},"body":{"classes/Post.html":{},"classes/User.html":{}}}],["prop()@apiproperty({description",{"_index":509,"title":{},"body":{"classes/Post.html":{},"classes/User.html":{}}}],["properties",{"_index":191,"title":{},"body":{"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/LoginUserDto.html":{},"classes/Post.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":203,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/MailService.html":{}}}],["put",{"_index":548,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["put(':id",{"_index":582,"title":{},"body":{"controllers/PostsController.html":{}}}],["put(':username",{"_index":787,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":425,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"miscellaneous/variables.html":{}}}],["query.content",{"_index":622,"title":{},"body":{"injectables/PostsService.html":{}}}],["query.current",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query.pagesize",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query.title",{"_index":618,"title":{},"body":{"injectables/PostsService.html":{}}}],["rate",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["rbacinterceptor",{"_index":637,"title":{"injectables/RbacInterceptor.html":{}},"body":{"injectables/RbacInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["rbacinterceptor(roleconstants.admin",{"_index":773,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":994,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["receivers",{"_index":504,"title":{},"body":{"injectables/MailService.html":{}}}],["redis",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/PostsService.html":{},"dependencies.html":{}}}],["redismodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["redismodule.register",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["redisservice",{"_index":605,"title":{},"body":{"injectables/PostsService.html":{}}}],["reflect",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":620,"title":{},"body":{"injectables/PostsService.html":{}}}],["regexp(query.content",{"_index":624,"title":{},"body":{"injectables/PostsService.html":{}}}],["regexp(query.title",{"_index":621,"title":{},"body":{"injectables/PostsService.html":{}}}],["register",{"_index":718,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["register(@body",{"_index":776,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(registeruserdto",{"_index":731,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":652,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["registeruserdto.password",{"_index":835,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.role",{"_index":837,"title":{},"body":{"injectables/UsersService.html":{}}}],["registeruserdto.salt",{"_index":836,"title":{},"body":{"injectables/UsersService.html":{}}}],["remove",{"_index":522,"title":{},"body":{"controllers/PostsController.html":{}}}],["remove(@param('id",{"_index":590,"title":{},"body":{"controllers/PostsController.html":{}}}],["remove(id",{"_index":539,"title":{},"body":{"controllers/PostsController.html":{}}}],["repository",{"_index":963,"title":{},"body":{"index.html":{}}}],["req",{"_index":412,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"controllers/PostsController.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["req.ip",{"_index":422,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.method",{"_index":420,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":418,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.user.role",{"_index":651,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["request",{"_index":31,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"miscellaneous/variables.html":{}}}],["request.query",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('multer",{"_index":769,"title":{},"body":{"controllers/UsersController.html":{}}}],["require('path",{"_index":767,"title":{},"body":{"controllers/UsersController.html":{}}}],["res",{"_index":409,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["res.statuscode",{"_index":415,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":32,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["result",{"_index":47,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result['code",{"_index":586,"title":{},"body":{"controllers/PostsController.html":{}}}],["result['current",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result['msg",{"_index":588,"title":{},"body":{"controllers/PostsController.html":{}}}],["result['pagesize",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":49,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/MailController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["roleconstants",{"_index":758,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleconstants.normal",{"_index":838,"title":{},"body":{"injectables/UsersService.html":{}}}],["run",{"_index":969,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":649,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":695,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["salt",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":955,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["sdf32dfc",{"_index":442,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["sdf32dfc'})@isstring",{"_index":437,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["sdf32dfc'})@isstring()@length(6",{"_index":657,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["secret",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":483,"title":{},"body":{"modules/MailModule.html":{}}}],["send",{"_index":490,"title":{},"body":{"injectables/MailService.html":{}}}],["send(to",{"_index":495,"title":{},"body":{"injectables/MailService.html":{}}}],["sendemail",{"_index":449,"title":{},"body":{"controllers/MailController.html":{}}}],["sendemail(@body",{"_index":466,"title":{},"body":{"controllers/MailController.html":{}}}],["sendemail(sendemaildto",{"_index":450,"title":{},"body":{"controllers/MailController.html":{}}}],["sendemaildto",{"_index":451,"title":{"classes/SendEmailDto.html":{}},"body":{"controllers/MailController.html":{},"classes/SendEmailDto.html":{},"coverage.html":{}}}],["sendemaildto.content",{"_index":469,"title":{},"body":{"controllers/MailController.html":{}}}],["sendemaildto.title",{"_index":468,"title":{},"body":{"controllers/MailController.html":{}}}],["sendmail",{"_index":502,"title":{},"body":{"injectables/MailService.html":{}}}],["server",{"_index":924,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":357,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["side",{"_index":956,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["smtp.qq.com",{"_index":480,"title":{},"body":{"modules/MailModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":987,"title":{},"body":{"index.html":{}}}],["src/.../auth.decorator.ts",{"_index":945,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cryptogram.ts",{"_index":944,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../log4js.ts",{"_index":941,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":943,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../pagination.decorator.ts",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.constants.ts",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.schema.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:33",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.module.ts",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:44",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":380,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":384,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":382,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/decorator/auth.decorator.ts",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/decorator/pagination.decorator.ts",{"_index":859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/user.decorator.ts",{"_index":860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filter/any",{"_index":6,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/filter/http",{"_index":355,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/interceptor/rbac.interceptor.ts",{"_index":638,"title":{},"body":{"injectables/RbacInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/rbac.interceptor.ts:5",{"_index":641,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["src/interceptor/rbac.interceptor.ts:8",{"_index":645,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["src/interceptor/transform.interceptor.ts",{"_index":692,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/transform.interceptor.ts:8",{"_index":693,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/mail/dtos/send",{"_index":667,"title":{},"body":{"classes/SendEmailDto.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts",{"_index":446,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:15",{"_index":453,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":474,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":489,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:11",{"_index":498,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":494,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":406,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/middleware/logger.middleware.ts:7",{"_index":411,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/model/base.model.ts",{"_index":190,"title":{},"body":{"classes/BaseModel.html":{},"coverage.html":{}}}],["src/model/base.model.ts:2",{"_index":197,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/model/base.model.ts:3",{"_index":196,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/model/base.model.ts:4",{"_index":194,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/model/error.model.ts",{"_index":344,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["src/model/error.model.ts:3",{"_index":346,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/model/success.model.ts",{"_index":677,"title":{},"body":{"classes/SuccessResponse.html":{},"coverage.html":{}}}],["src/model/success.model.ts:3",{"_index":678,"title":{},"body":{"classes/SuccessResponse.html":{}}}],["src/posts/dtos/create",{"_index":322,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/posts/dtos/update",{"_index":698,"title":{},"body":{"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["src/posts/post.model.ts",{"_index":508,"title":{},"body":{"classes/Post.html":{},"coverage.html":{}}}],["src/posts/post.model.ts:10",{"_index":512,"title":{},"body":{"classes/Post.html":{}}}],["src/posts/post.model.ts:17",{"_index":510,"title":{},"body":{"classes/Post.html":{}}}],["src/posts/post.model.ts:24",{"_index":513,"title":{},"body":{"classes/Post.html":{}}}],["src/posts/posts.controller.ts",{"_index":517,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:40",{"_index":538,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:50",{"_index":527,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:61",{"_index":530,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:71",{"_index":545,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:85",{"_index":541,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:97",{"_index":534,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":598,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/posts.service.ts",{"_index":601,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/posts.service.ts:10",{"_index":606,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:18",{"_index":615,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:30",{"_index":607,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:34",{"_index":611,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:38",{"_index":616,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:52",{"_index":609,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/posts.service.ts:65",{"_index":613,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/tasks/tasks.module.ts",{"_index":683,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":685,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:8",{"_index":688,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/users/constants/role.constants.ts",{"_index":866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dtos/login",{"_index":435,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/register",{"_index":653,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/update",{"_index":702,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/users.schema.ts",{"_index":868,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":714,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:111",{"_index":744,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:123",{"_index":740,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":727,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":733,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:58",{"_index":730,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:85",{"_index":724,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:94",{"_index":736,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.model.ts",{"_index":704,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/users.model.ts:10",{"_index":712,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.model.ts:17",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.model.ts:24",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.model.ts:30",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.model.ts:36",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.module.ts",{"_index":815,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":821,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":825,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":828,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":829,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:49",{"_index":827,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":830,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/cryptogram.ts",{"_index":869,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/log4js.ts",{"_index":202,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/utils/log4js.ts:106",{"_index":403,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:110",{"_index":396,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:114",{"_index":402,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:118",{"_index":401,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:122",{"_index":404,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:126",{"_index":405,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:130",{"_index":397,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:134",{"_index":398,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:138",{"_index":395,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:144",{"_index":399,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:23",{"_index":209,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:25",{"_index":212,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:26",{"_index":214,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:27",{"_index":213,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:28",{"_index":211,"title":{},"body":{"classes/ContextTrace.html":{}}}],["stackinfo",{"_index":310,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.columnnumber",{"_index":313,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.filename",{"_index":315,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.linenumber",{"_index":312,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist",{"_index":307,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist[deep",{"_index":311,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace",{"_index":218,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["stacktrace.getsync",{"_index":309,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.stackframe",{"_index":308,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["start",{"_index":923,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["start:dev",{"_index":972,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":974,"title":{},"body":{"index.html":{}}}],["started",{"_index":949,"title":{"index.html":{}},"body":{}}],["starter",{"_index":962,"title":{},"body":{"index.html":{}}}],["statements",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":286,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["status",{"_index":42,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{}}}],["stay",{"_index":997,"title":{},"body":{"index.html":{}}}],["storage",{"_index":792,"title":{},"body":{"controllers/UsersController.html":{}}}],["store",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["strategy",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/LoginUserDto.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":496,"title":{},"body":{"injectables/MailService.html":{}}}],["successresponse",{"_index":461,"title":{"classes/SuccessResponse.html":{}},"body":{"controllers/MailController.html":{},"controllers/PostsController.html":{},"classes/SuccessResponse.html":{},"coverage.html":{}}}],["successresponse(null",{"_index":470,"title":{},"body":{"controllers/MailController.html":{}}}],["successresponse(result",{"_index":573,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":570,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(data",{"_index":352,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["support",{"_index":988,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1008,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":263,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"controllers/UsersController.html":{}}}],["table",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["tasks.service",{"_index":684,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":64,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":682,"title":{"injectables/TasksService.html":{}},"body":{"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":977,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":980,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":979,"title":{},"body":{"index.html":{}}}],["tests",{"_index":976,"title":{},"body":{"index.html":{}}}],["text",{"_index":497,"title":{},"body":{"injectables/MailService.html":{}}}],["thanks",{"_index":986,"title":{},"body":{"index.html":{}}}],["then(async",{"_index":505,"title":{},"body":{"injectables/MailService.html":{}}}],["this.authservice.certificate(authresult.user",{"_index":784,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.validateuser",{"_index":780,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.authservice.validateuser(username",{"_index":388,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.code",{"_index":353,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/SuccessResponse.html":{}}}],["this.configservice.get('default_from",{"_index":500,"title":{},"body":{"injectables/MailService.html":{}}}],["this.data",{"_index":200,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.jwtservice.sign(payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice",{"_index":501,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.send(sendemaildto.email",{"_index":467,"title":{},"body":{"controllers/MailController.html":{}}}],["this.msg",{"_index":199,"title":{},"body":{"classes/BaseModel.html":{}}}],["this.postmodel.create(createpostdto",{"_index":628,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postmodel.find(conditions).limit(pagesize).skip(current",{"_index":627,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postmodel.find({userid",{"_index":636,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postmodel.findbyid(id",{"_index":629,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postmodel.findbyidanddelete(id",{"_index":635,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postmodel.findbyidandupdate(id",{"_index":633,"title":{},"body":{"injectables/PostsService.html":{}}}],["this.postsservice.create(createpostdto",{"_index":577,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.deletebyid(id",{"_index":591,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.findbyid(id",{"_index":580,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.getmyposts(currentuser.userid",{"_index":595,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.list(query",{"_index":572,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.postsservice.update(id",{"_index":585,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usermodel.create(registeruserdto",{"_index":839,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":832,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find({username",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate(userid",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findbyusername(username",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{}}}],["this.usersservice.listuser",{"_index":774,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.register(registeruserdto",{"_index":777,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updatebyusername(username",{"_index":789,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":389,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{}}}],["title",{"_index":325,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/Post.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{}}}],["token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":998,"title":{},"body":{"index.html":{}}}],["trace",{"_index":226,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["trace(...args",{"_index":287,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["transformer",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["transforminterceptor",{"_index":691,"title":{"injectables/TransformInterceptor.html":{}},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":479,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["ts",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["twitter",{"_index":1004,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/CreatePostDto.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"classes/Post.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/RbacInterceptor.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/SuccessResponse.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typegoose",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typegoose/typegoose",{"_index":515,"title":{},"body":{"classes/Post.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/types",{"_index":556,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["typegoosemodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["typegoosemodule.forfeature([post",{"_index":600,"title":{},"body":{"modules/PostsModule.html":{}}}],["typegoosemodule.forfeature([user",{"_index":820,"title":{},"body":{"modules/UsersModule.html":{}}}],["typegoosemodule.forroot(\"mongodb://10.211.55.6/nest",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["typeof",{"_index":198,"title":{},"body":{"classes/BaseModel.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["typeoutput",{"_index":250,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["types/mongoose",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":961,"title":{},"body":{"index.html":{}}}],["ui",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":386,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unit",{"_index":975,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":14,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["update",{"_index":523,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["update(@param('id",{"_index":583,"title":{},"body":{"controllers/PostsController.html":{}}}],["update(id",{"_index":542,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["updatebyusername",{"_index":719,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatebyusername(@param('username",{"_index":788,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatebyusername(username",{"_index":734,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatepostdto",{"_index":543,"title":{"classes/UpdatePostDto.html":{}},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"coverage.html":{}}}],["updatepostdto.userid",{"_index":584,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepostdto['userid",{"_index":632,"title":{},"body":{"injectables/PostsService.html":{}}}],["updateuserdto",{"_index":701,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["upload",{"_index":803,"title":{},"body":{"controllers/UsersController.html":{}}}],["upload')@useinterceptors(undefined)@apioperation({summary",{"_index":739,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadedfile",{"_index":746,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadedfiles",{"_index":747,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadfile",{"_index":720,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadfile(@uploadedfiles",{"_index":805,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadfile(files",{"_index":737,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadsingle",{"_index":721,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadsingle(@uploadedfile",{"_index":801,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadsingle(file",{"_index":742,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":417,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use",{"_index":407,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":408,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useguards",{"_index":549,"title":{},"body":{"controllers/PostsController.html":{}}}],["useinterceptors",{"_index":550,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":791,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(filesinterceptor('files",{"_index":804,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(new",{"_index":726,"title":{},"body":{"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":748,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":145,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PostsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":754,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":436,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":703,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:12",{"_index":441,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:13",{"_index":663,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:21",{"_index":438,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:23",{"_index":659,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:32",{"_index":656,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:35",{"_index":661,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:38",{"_index":660,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.name",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.salt",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":592,"title":{},"body":{"controllers/PostsController.html":{}}}],["user.username",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["user[data",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_count",{"_index":833,"title":{},"body":{"injectables/UsersService.html":{}}}],["userid",{"_index":326,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/JwtStrategy.html":{},"classes/Post.html":{},"injectables/PostsService.html":{},"classes/UpdatePostDto.html":{},"injectables/UsersService.html":{}}}],["usermodel",{"_index":772,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":715,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":816,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.model",{"_index":750,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":752,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["users[0",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["users[0]._id",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["userschema",{"_index":749,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":713,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":65,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":140,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":216,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.inspect(value",{"_index":244,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["utils/cryptogram",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["utils/log4js",{"_index":35,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TasksService.html":{},"injectables/TransformInterceptor.html":{}}}],["validate",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":383,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":341,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/SendEmailDto.html":{},"classes/UpdatePostDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":240,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.columnnumber",{"_index":243,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.context",{"_index":241,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.linenumber",{"_index":242,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["variable",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1014,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Logger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/TasksService.html":{}}}],["warn",{"_index":228,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...args",{"_index":295,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warning",{"_index":394,"title":{},"body":{"classes/Logger.html":{}}}],["warning(...args",{"_index":297,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["watch",{"_index":970,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["website",{"_index":1002,"title":{},"body":{"index.html":{}}}],["writeimage",{"_index":808,"title":{},"body":{"controllers/UsersController.html":{}}}],["writeimage.write(file.buffer",{"_index":811,"title":{},"body":{"controllers/UsersController.html":{}}}],["xxx",{"_index":487,"title":{},"body":{"modules/MailModule.html":{}}}],["yes",{"_index":210,"title":{},"body":{"classes/ContextTrace.html":{}}}],["you'd",{"_index":991,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":255,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["yyyymmdd",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/PostsModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/any-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/any-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Logger } from '../utils/log4js';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse()\n    const request = ctx.getRequest()\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus(): HttpStatus.INTERNAL_SERVER_ERROR\n\n    const logFormat = ` \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { PostsModule } from './posts/posts.module';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { LoggerMiddleware } from './middleware/logger.middleware';\nimport { RedisModule } from 'nestjs-redis';\nimport { MailModule } from './mail/mail.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { TasksModule } from './tasks/tasks.module';\nimport { ScheduleModule } from '@nestjs/schedule';\n\n@Module({\n  imports: [\n    TypegooseModule.forRoot(\"mongodb://10.211.55.6/nest-blog-api\", {\n      useNewUrlParser: true\n    }),\n    RedisModule.register({\n      port: 6379,\n      host: 'localhost'\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true\n    }),\n    ScheduleModule.forRoot(),\n    PostsModule,\n    UsersModule,\n    AuthModule,\n    MailModule,\n    TasksModule]\n})\nexport class AppModule implements NestModule{\n  configure(consumer: MiddlewareConsumer): any {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes(\"*\")\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { UsersModule } from '../users/users.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '8h' }\n    }),\n    UsersModule\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                certificate\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            certificate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    certificate(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { encryptPassword } from '../utils/cryptogram';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService\n  ) {\n  }\n\n  async validateUser(username: string, password: string): Promise {\n    // console.log('Step 2: 校验用户信息');\n    const user = await this.usersService.findByUsername(username)\n    if (user) {\n      // @ts-ignore\n      const hashedPassword = user.password\n      // @ts-ignore\n      const salt = user.salt\n      const hashPassword = encryptPassword(password, salt)\n      if (hashedPassword === hashPassword) {\n        // 密码正确\n        return {\n          code: 1,\n          user\n        }\n      } else {\n        return {\n          code: 2,\n          user: null\n        }\n      }\n    }\n\n    return {\n      code: 3,\n      user: null\n    }\n  }\n\n  // jwt验证\n  async certificate(user: any) {\n    const payload = {\n      username: user.username,\n      sub: user._id,\n      name: user.name,\n      role: user.role\n    }\n    // console.log('Step 3: 处理 jwt 签证');\n    try {\n      const token = this.jwtService.sign(payload)\n      return {\n        code: 200,\n        data: {\n          token\n        },\n        msg: '登录成功'\n      }\n    } catch (e) {\n      return {\n        code: 500,\n        msg: '账号或密码错误'\n      }\n    }\n  }\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/base.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                data\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data, message)\n                    \n                \n                        \n                            \n                                Defined in src/model/base.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/base.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/base.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/model/base.model.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class BaseModel {\n  msg: string;\n  data: any;\n  code: number;\n\n  constructor(data, message) {\n    if (typeof data === \"string\") {\n      this.msg = data\n      data = null\n      message = null\n    }\n    if (data) {\n      this.data = data\n    }\n    if (message) {\n      this.msg = message\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextTrace.html":{"url":"classes/ContextTrace.html","title":"class - ContextTrace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextTrace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/log4js.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                columnNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                lineNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string, path?: string, lineNumber?: number, columnNumber?: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/log4js.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lineNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        columnNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            columnNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/log4js.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/log4js.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            lineNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/log4js.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/utils/log4js.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment'; // 处理时间的工具\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\nimport config from '../../config/log4js';\n\n// 日志级别\nexport enum LoggerLevel {\n  ALL = 'ALL',\n  MARK = 'MARK',\n  TRACE = 'TRACE',\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL',\n  OFF = 'OFF',\n}\n\n// 内容跟踪类\nexport class ContextTrace {\n  constructor(\n    public readonly context: string,\n    public readonly path?: string,\n    public readonly lineNumber?: number,\n    public readonly columnNumber?: number,\n  ) {}\n}\n\nLog4js.addLayout('Awesome-nest', (logConfig: any) => {\n  return (logEvent: Log4js.LoggingEvent): string => {\n    let moduleName: string = '';\n    let position: string = '';\n\n    // 日志组装\n    const messageList: string[] = [];\n    logEvent.data.forEach((value: any) => {\n      if (value instanceof ContextTrace) {\n        moduleName = value.context;\n        // 显示触发日志的坐标（行，列）\n        if (value.lineNumber && value.columnNumber) {\n          position = `${value.lineNumber}, ${value.columnNumber}`;\n        }\n        return;\n      }\n\n      if (typeof value !== 'string') {\n        value = Util.inspect(value, false, 3, true);\n      }\n\n      messageList.push(value);\n    });\n\n    // 日志组成部分\n    const messageOutput: string = messageList.join(' ');\n    const positionOutput: string = position ? ` [${position}]` : '';\n    const typeOutput: string = `[${\n      logConfig.type\n    }] ${logEvent.pid.toString()}   - `;\n    const dateOutput: string = `${Moment(logEvent.startTime).format(\n      'YYYY-MM-DD HH:mm:ss',\n    )}`;\n    const moduleOutput: string = moduleName\n      ? `[${moduleName}] `\n      : '[LoggerService] ';\n    let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n    // 根据日志级别，用不同颜色区分\n    switch (logEvent.level.toString()) {\n      case LoggerLevel.DEBUG:\n        levelOutput = Chalk.green(levelOutput);\n        break;\n      case LoggerLevel.INFO:\n        levelOutput = Chalk.cyan(levelOutput);\n        break;\n      case LoggerLevel.WARN:\n        levelOutput = Chalk.yellow(levelOutput);\n        break;\n      case LoggerLevel.ERROR:\n        levelOutput = Chalk.red(levelOutput);\n        break;\n      case LoggerLevel.FATAL:\n        levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n        break;\n      default:\n        levelOutput = Chalk.grey(levelOutput);\n        break;\n    }\n\n    return `${Chalk.green(typeOutput)}${dateOutput}  ${Chalk.yellow(\n      moduleOutput,\n    )}${levelOutput}${positionOutput}`;\n  };\n});\n\n// 注入配置\nLog4js.configure(config);\n\n// 实例化\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n  static trace(...args) {\n    logger.trace(Logger.getStackTrace(), ...args);\n  }\n\n  static debug(...args) {\n    logger.debug(Logger.getStackTrace(), ...args);\n  }\n\n  static log(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static info(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static warn(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static warning(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static error(...args) {\n    logger.error(Logger.getStackTrace(), ...args);\n  }\n\n  static fatal(...args) {\n    logger.fatal(Logger.getStackTrace(), ...args);\n  }\n\n  static access(...args) {\n    const loggerCustom = Log4js.getLogger('http');\n    loggerCustom.info(Logger.getStackTrace(), ...args);\n  }\n\n  // 日志追踪，可以追溯到哪个文件、第几行第几列\n  static getStackTrace(deep: number = 2): string {\n    const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n    const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n    const lineNumber: number = stackInfo.lineNumber;\n    const columnNumber: number = stackInfo.columnNumber;\n    const fileName: string = stackInfo.fileName;\n    const basename: string = Path.basename(fileName);\n    return `${basename}(line: ${lineNumber}, column: ${columnNumber}): \\n`;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '帖子内容', example: '内容1'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/create-post.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '帖子标题', example: '这是第一个帖子标题'})@IsNotEmpty({message: '请填写标题'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/create-post.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '用户id', example: ''})@IsEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/create-post.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmpty, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: '帖子标题',\n    example: '这是第一个帖子标题'\n  })\n  @IsNotEmpty({message: '请填写标题'})\n  @IsString()\n  title: string\n\n\n  @ApiProperty({\n    description: '帖子内容',\n    example: '内容1'\n  })\n  @IsString()\n  content: string\n\n  @ApiProperty({\n    description: '用户id',\n    example: ''\n  })\n  @IsEmpty()\n  userId: string\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/error.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                data\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data, message)\n                    \n                \n                        \n                            \n                                Defined in src/model/error.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from './base.model';\n\nexport class ErrorResponse extends BaseModel {\n  constructor(data, message) {\n    super(data, message)\n    this.code = -1\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/http-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Logger } from '../utils/log4js';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter{\n  catch(exception: HttpException, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    const logFormat = ` = 500 ? 'Service Error' : 'Client Error'}`,\n    })\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    // console.log(`Step 4: 被守卫调用`);\n    return {\n      userId: payload.sub,\n      username: payload.username,\n      name: payload.name,\n      role: payload.role\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/log4js.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                access\n                            \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                fatal\n                            \n                            \n                                    Static\n                                getStackTrace\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                trace\n                            \n                            \n                                    Static\n                                warn\n                            \n                            \n                                    Static\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            access\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    access(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fatal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fatal(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getStackTrace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStackTrace(deep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    deep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            trace\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment'; // 处理时间的工具\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\nimport config from '../../config/log4js';\n\n// 日志级别\nexport enum LoggerLevel {\n  ALL = 'ALL',\n  MARK = 'MARK',\n  TRACE = 'TRACE',\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL',\n  OFF = 'OFF',\n}\n\n// 内容跟踪类\nexport class ContextTrace {\n  constructor(\n    public readonly context: string,\n    public readonly path?: string,\n    public readonly lineNumber?: number,\n    public readonly columnNumber?: number,\n  ) {}\n}\n\nLog4js.addLayout('Awesome-nest', (logConfig: any) => {\n  return (logEvent: Log4js.LoggingEvent): string => {\n    let moduleName: string = '';\n    let position: string = '';\n\n    // 日志组装\n    const messageList: string[] = [];\n    logEvent.data.forEach((value: any) => {\n      if (value instanceof ContextTrace) {\n        moduleName = value.context;\n        // 显示触发日志的坐标（行，列）\n        if (value.lineNumber && value.columnNumber) {\n          position = `${value.lineNumber}, ${value.columnNumber}`;\n        }\n        return;\n      }\n\n      if (typeof value !== 'string') {\n        value = Util.inspect(value, false, 3, true);\n      }\n\n      messageList.push(value);\n    });\n\n    // 日志组成部分\n    const messageOutput: string = messageList.join(' ');\n    const positionOutput: string = position ? ` [${position}]` : '';\n    const typeOutput: string = `[${\n      logConfig.type\n    }] ${logEvent.pid.toString()}   - `;\n    const dateOutput: string = `${Moment(logEvent.startTime).format(\n      'YYYY-MM-DD HH:mm:ss',\n    )}`;\n    const moduleOutput: string = moduleName\n      ? `[${moduleName}] `\n      : '[LoggerService] ';\n    let levelOutput: string = `[${logEvent.level}] ${messageOutput}`;\n\n    // 根据日志级别，用不同颜色区分\n    switch (logEvent.level.toString()) {\n      case LoggerLevel.DEBUG:\n        levelOutput = Chalk.green(levelOutput);\n        break;\n      case LoggerLevel.INFO:\n        levelOutput = Chalk.cyan(levelOutput);\n        break;\n      case LoggerLevel.WARN:\n        levelOutput = Chalk.yellow(levelOutput);\n        break;\n      case LoggerLevel.ERROR:\n        levelOutput = Chalk.red(levelOutput);\n        break;\n      case LoggerLevel.FATAL:\n        levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n        break;\n      default:\n        levelOutput = Chalk.grey(levelOutput);\n        break;\n    }\n\n    return `${Chalk.green(typeOutput)}${dateOutput}  ${Chalk.yellow(\n      moduleOutput,\n    )}${levelOutput}${positionOutput}`;\n  };\n});\n\n// 注入配置\nLog4js.configure(config);\n\n// 实例化\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n  static trace(...args) {\n    logger.trace(Logger.getStackTrace(), ...args);\n  }\n\n  static debug(...args) {\n    logger.debug(Logger.getStackTrace(), ...args);\n  }\n\n  static log(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static info(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static warn(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static warning(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static error(...args) {\n    logger.error(Logger.getStackTrace(), ...args);\n  }\n\n  static fatal(...args) {\n    logger.fatal(Logger.getStackTrace(), ...args);\n  }\n\n  static access(...args) {\n    const loggerCustom = Log4js.getLogger('http');\n    loggerCustom.info(Logger.getStackTrace(), ...args);\n  }\n\n  // 日志追踪，可以追溯到哪个文件、第几行第几列\n  static getStackTrace(deep: number = 2): string {\n    const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n    const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n    const lineNumber: number = stackInfo.lineNumber;\n    const columnNumber: number = stackInfo.columnNumber;\n    const fileName: string = stackInfo.fileName;\n    const basename: string = Path.basename(fileName);\n    return `${basename}(line: ${lineNumber}, column: ${columnNumber}): \\n`;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/logger.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from '@nestjs/common';\nimport { Logger } from '../utils/log4js'\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(req: any, res: any, next: () => void) {\n    const code = res.statusCode\n    next();\n    // 组装日志信息\n    const logFormat = ` >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    Request original url: ${req.originalUrl}\n    Method: ${req.method}\n    IP: ${req.ip}\n    Status code: ${code}\n    Parmas: ${JSON.stringify(req.params)}\n    Query: ${JSON.stringify(req.query)}\n    Body: ${JSON.stringify(req.body)} \\n  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    `;\n    // 根据状态码，进行日志类型区分\n    if (code >= 500) {\n      Logger.error(logFormat);\n    } else if (code >= 400) {\n      Logger.warn(logFormat);\n    } else {\n      Logger.access(logFormat);\n      Logger.log(logFormat);\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '请输入密码'})@ApiProperty({description: '密码', example: 'sdf32dfc'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/login-user.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '请输入用户名'})@IsString()@ApiProperty({description: '用户名', example: 'kk'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/login-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginUserDto {\n\n  @IsNotEmpty({message: '请输入用户名'})\n  @IsString()\n  @ApiProperty({\n    description: '用户名',\n    example: 'kk'\n  })\n  username: string\n\n\n  @IsNotEmpty({message: '请输入密码'})\n  @ApiProperty({\n    description: '密码',\n    example: 'sdf32dfc'\n  })\n  @IsString()\n  password: string\n\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendEmail\n                        \n                        \n                    \n                \n            \n            \n                \nsendEmail(sendEmailDto: SendEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send')@ApiOperation({summary: '发送邮件'})\n                \n            \n\n            \n                \n                    Defined in src/mail/mail.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendEmailDto\n                                    \n                                                SendEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { SendEmailDto } from './dtos/send-email.dto';\nimport { SuccessResponse } from '../model/success.model';\n\n@Controller('mail')\n@ApiTags(\"邮件发送\")\nexport class MailController {\n  constructor(private readonly mailService: MailService) {\n  }\n\n  @Post(\"send\")\n  @ApiOperation({summary: '发送邮件'})\n  sendEmail(@Body() sendEmailDto: SendEmailDto) {\n    this.mailService.send(sendEmailDto.email, sendEmailDto.title, sendEmailDto.content)\n    return new SuccessResponse(null, '发送成功')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { MailController } from './mail.controller';\n\n@Module({\n  imports: [\n    MailerModule.forRoot({\n      transport: {\n        host: 'smtp.qq.com',\n        port: 465,\n        ignoreTLS: true,\n        secure: true,\n        auth: {\n          user: '705555262@qq.com',\n          pass: 'xxx'\n        }\n      },\n      defaults: {\n        from: '705555262@qq.com'\n      }\n    })\n  ],\n  providers: [MailService],\n  controllers: [MailController],\n  exports: [MailService]\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            send\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    send(to: string, subject: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class MailService {\n  constructor(private readonly mailerService: MailerService,\n              private configService: ConfigService) {\n  }\n\n  public send(to: string, subject: string, text: string) {\n    const DEFAULT_FROM = this.configService.get('DEFAULT_FROM')\n    this.mailerService\n      .sendMail({\n        to, // list of receivers\n        from: DEFAULT_FROM,\n        subject,\n        text\n      })\n      .then(async () => {\n        // 写入数据库中\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Post.html":{"url":"classes/Post.html","title":"class - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/post.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '内容', example: '内容1'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/post.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '标题', example: '标题1'})@prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/post.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '用户id', example: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/post.model.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop } from '@typegoose/typegoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class Post {\n  @ApiProperty({\n    description: '标题',\n    example: '标题1'\n  })\n  @prop()\n  title: string;\n\n  @prop()\n  @ApiProperty({\n    description: '内容',\n    example: '内容1'\n  })\n  content: string;\n\n  @prop()\n  @ApiProperty({\n    description: '用户id',\n    example: ''\n  })\n  userId: string\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                detail\n                            \n                            \n                                    Async\n                                getMyPosts\n                            \n                            \n                                    Async\n                                index\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: CreatePostDto, currentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Post()@ApiOperation({summary: '创建帖子'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            detail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detail(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: '详情'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMyPosts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyPosts(currentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Post('my-posts')@ApiOperation({summary: '获取登录用户的所有文章'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            index\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    index(query, pagination)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: '查看博客列表'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Delete(':id')@ApiOperation({summary: '删除'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePostDto: UpdatePostDto, currentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Put(':id')@ApiOperation({summary: '编辑帖子'})\n                \n            \n\n            \n                \n                    Defined in src/posts/posts.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Query,\n  Req,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiOperation, ApiProperty, ApiTags } from '@nestjs/swagger';\nimport { InjectModel } from 'nestjs-typegoose';\nimport {Post as PostSchema} from './post.model'\nimport { ModelType } from '@typegoose/typegoose/lib/types';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { UpdatePostDto } from './dtos/update-post.dto';\nimport { PostsService } from './posts.service';\nimport { CurrentUser } from '../decorator/user.decorator';\nimport { LoginRequired } from '../decorator/auth.decorator';\nimport { SuccessResponse } from '../model/success.model';\nimport { ErrorResponse } from '../model/error.model';\nimport { Pagination } from '../decorator/pagination.decorator';\n\n\n@Controller('posts')\n@ApiTags('帖子')\nexport class PostsController {\n  constructor(\n    @InjectModel(PostSchema) private readonly postModel: ModelType,\n    private readonly postsService: PostsService) {\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: '查看博客列表'\n  })\n  async index(@Query() query, @Pagination() pagination) {\n    const result =  await this.postsService.list(query, pagination);\n    return new SuccessResponse(result, null)\n  }\n\n  @LoginRequired()\n  @Post()\n  @ApiOperation({\n    summary: '创建帖子'\n  })\n  async create(@Body() createPostDto: CreatePostDto, @CurrentUser() currentUser) {\n    // @ts-ignore\n    createPostDto.userId = currentUser.userId\n    const result = await this.postsService.create(createPostDto)\n    return new SuccessResponse(result, '创建成功')\n  }\n\n  @Get(\":id\")\n  @ApiOperation({\n    summary: '详情'\n  })\n  async detail(@Param('id') id: string) {\n    const result = await this.postsService.findById(id)\n    return new SuccessResponse(result, 'ok')\n  }\n\n  @LoginRequired()\n  @Put(':id')\n  @ApiOperation({\n    summary: '编辑帖子'\n  })\n  async update(@Param('id') id: string, @Body() updatePostDto: UpdatePostDto, @CurrentUser() currentUser) {\n    updatePostDto.userId = currentUser.userId\n    const result = await this.postsService.update(id, updatePostDto)\n    if (result['code'] === 500) {\n      return new ErrorResponse(null, result['msg'])\n    }\n    return new SuccessResponse(result, '更新成功')\n  }\n\n  @LoginRequired()\n  @Delete(':id')\n  @ApiOperation({\n    summary: \"删除\"\n  })\n  async remove(@Param('id') id: string, @CurrentUser() user) {\n    // @ts-ignore\n    const result = await this.postsService.deleteById(id, user.userId)\n    if (result['code'] === 500) {\n      return new ErrorResponse(null, result['msg'])\n    }\n    return new SuccessResponse(result, '删除成功')\n  }\n\n  @LoginRequired()\n  @Post(\"my-posts\")\n  @ApiOperation({summary: '获取登录用户的所有文章'})\n  async getMyPosts(@CurrentUser() currentUser) {\n    // @ts-ignore\n    return this.postsService.getMyPosts(currentUser.userId);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nPostsService\n\nPostsService\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { Post } from './post.model';\nimport { PostsService } from './posts.service';\n\n\n@Module({\n  imports: [\n    TypegooseModule.forFeature([Post])\n  ],\n  controllers: [\n    PostsController\n  ],\n  providers: [PostsService]\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteById\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getMyPosts\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(PostModel: ModelType, redisService: RedisService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/posts.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        PostModel\n                                                  \n                                                        \n                                                                        ModelType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisService\n                                                  \n                                                        \n                                                                    RedisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: CreatePostDto)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteById(id: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMyPosts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMyPosts(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: any, pagination: any)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePostDto: UpdatePostDto)\n                \n            \n\n\n            \n                \n                    Defined in src/posts/posts.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePostDto\n                                    \n                                                UpdatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { Post as PostSchema } from './post.model';\nimport { ModelType } from '@typegoose/typegoose/lib/types';\nimport { CreatePostDto } from './dtos/create-post.dto';\nimport { UpdatePostDto } from './dtos/update-post.dto';\nimport { RedisService } from 'nestjs-redis';\n\n@Injectable()\nexport class PostsService {\n  constructor(\n    @InjectModel(PostSchema) private readonly PostModel: ModelType,\n    private readonly redisService: RedisService\n  ) {\n  }\n\n\n  async list(query: any, pagination: any) {\n    let conditions = {}\n    if (query.title) {\n      conditions['title'] = {$regex: new RegExp(query.title, 'i')}\n    }\n    if (query.content) {\n      conditions['content'] = {$regex: new RegExp(query.content, 'i')}\n    }\n    const { current, pageSize } = pagination\n    return await this.PostModel.find(conditions).limit(pageSize).skip(current - 1)\n  }\n\n  async create(createPostDto: CreatePostDto) {\n    return await this.PostModel.create(createPostDto)\n  }\n\n  async findById(id: string) {\n    return await this.PostModel.findById(id)\n  }\n\n  async update(id: string, updatePostDto: UpdatePostDto) {\n    const oldPost = await this.PostModel.findById(id)\n    if (oldPost.userId === updatePostDto['userId']) {\n      // 更新的文章userid和目前登录的用户相同\n      return await this.PostModel.findByIdAndUpdate(id, updatePostDto)\n    } else {\n      return {\n        code: 500,\n        msg: '用户id校验失败'\n      }\n    }\n\n  }\n\n  async deleteById(id: string, userId: string) {\n    const post = await this.PostModel.findById(id)\n    if (post.userId === userId) {\n      return await this.PostModel.findByIdAndDelete(id)\n    } else {\n      return {\n        code: 500,\n        msg: '不能删除他人的文章'\n      }\n    }\n\n  }\n\n  async getMyPosts(userId: string) {\n    return await this.PostModel.find({userId})\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RbacInterceptor.html":{"url":"injectables/RbacInterceptor.html","title":"injectable - RbacInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RbacInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/rbac.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(role: number)\n                    \n                \n                        \n                            \n                                Defined in src/interceptor/rbac.interceptor.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/rbac.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, ForbiddenException, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RbacInterceptor implements NestInterceptor {\n  constructor(private readonly role: number) {\n  }\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const req = context.getArgByIndex(1).req\n    if (req.user.role \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '名称', example: '狗蛋'})@Length(1, 20)@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/register-user.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '请输入密码'})@ApiProperty({description: '密码', example: 'sdf32dfc'})@IsString()@Length(6, 12)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/register-user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/register-user.dto.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/register-user.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '请输入用户名'})@IsString()@ApiProperty({description: '用户名', example: 'kk'})@Length(6, 12)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmpty, IsNotEmpty, IsString, Length } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterUserDto {\n\n  @IsNotEmpty({message: '请输入用户名'})\n  @IsString()\n  @ApiProperty({\n    description: '用户名',\n    example: 'kk'\n  })\n  @Length(6, 12)\n  username: string\n\n\n  @IsNotEmpty({message: '请输入密码'})\n  @ApiProperty({\n    description: '密码',\n    example: 'sdf32dfc'\n  })\n  @IsString()\n  @Length(6, 12)\n  password: string\n\n\n  @ApiProperty({\n    description: '名称',\n    example: '狗蛋'\n  })\n  @Length(1, 20)\n  @IsString()\n  name: string\n\n  @IsEmpty()\n  salt: string\n\n  @IsEmpty()\n  role: number\n\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendEmailDto.html":{"url":"classes/SendEmailDto.html","title":"class - SendEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/dtos/send-email.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                email\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '内容', example: '这是测试内容'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/mail/dtos/send-email.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '邮箱地址', example: '705555262@qq.com'})@IsNotEmpty({message: '请填写邮箱地址'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/mail/dtos/send-email.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '邮件标题', example: 'nestjs测试邮件'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/mail/dtos/send-email.dto.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEmpty, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SendEmailDto {\n  @ApiProperty({\n    description: '邮箱地址',\n    example: '705555262@qq.com'\n  })\n  @IsNotEmpty({message: '请填写邮箱地址'})\n  @IsEmail()\n  email: string\n\n\n  @ApiProperty({\n    description: '邮件标题',\n    example: 'nestjs测试邮件'\n  })\n  @IsString()\n  @IsNotEmpty()\n  title: string\n\n  @ApiProperty({\n    description: '内容',\n    example: '这是测试内容'\n  })\n  @IsString()\n  @IsNotEmpty()\n  content: string\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SuccessResponse.html":{"url":"classes/SuccessResponse.html","title":"class - SuccessResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SuccessResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/model/success.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                data\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data, message)\n                    \n                \n                        \n                            \n                                Defined in src/model/success.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:4\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseModel } from './base.model';\n\nexport class SuccessResponse extends BaseModel {\n  constructor(data, message) {\n    super(data, message)\n    this.code = 0\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\n\n@Module({\n  providers: [TasksService]\n})\nexport class TasksModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCron\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleCron\n                        \n                        \n                    \n                \n            \n            \n                \nhandleCron()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cron('45 * * * * *')\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Cron } from '@nestjs/schedule';\nimport { Logger } from '../utils/log4js';\n\n@Injectable()\nexport class TasksService {\n  @Cron('45 * * * * *')\n  handleCron() {\n    Logger.debug(\"每45秒执行一次\")\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/transform.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Logger } from '../utils/log4js';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const req = context.getArgByIndex(1).req;\n    return next.handle().pipe(\n      map((data) => {\n        const logFormat = ` \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePostDto.html":{"url":"classes/UpdatePostDto.html","title":"class - UpdatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/update-post.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '帖子内容'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/update-post.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '帖子标题'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/update-post.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '用户id', example: ''})@IsEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/posts/dtos/update-post.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmpty } from 'class-validator';\n\nexport class UpdatePostDto {\n  @ApiProperty({\n    description: '帖子标题'\n  })\n  title: string\n  @ApiProperty({\n    description: '帖子内容'\n  })\n  content: string\n\n  @ApiProperty({\n    description: '用户id',\n    example: ''\n  })\n  @IsEmpty()\n  userId: string\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '姓名', example: '王三'})@IsNotEmpty({message: '请输入姓名'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateUserDto {\n  @ApiProperty({\n    description: '姓名',\n    example: '王三'\n  })\n  @IsNotEmpty({message: '请输入姓名'})\n  @IsString()\n  readonly name: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '姓名', example: '张三'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '密码', example: '3fdfaf'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '权限, 1为普通用户，2为管理员'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.model.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop()@ApiProperty({description: '盐'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: '用户名', example: 'kk'})@prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.model.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { prop } from '@typegoose/typegoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class User {\n  @ApiProperty({\n    description: '用户名',\n    example: 'kk'\n  })\n  @prop()\n  username: string;\n\n  @prop()\n  @ApiProperty({\n    description: '密码',\n    example: '3fdfaf'\n  })\n  password: string;\n\n  @prop()\n  @ApiProperty({\n    description: '姓名',\n    example: '张三'\n  })\n  name: string;\n\n  @prop()\n  @ApiProperty({\n    description: '盐'\n  })\n  salt: string;\n\n  @prop()\n  @ApiProperty({\n    description: '权限, 1为普通用户，2为管理员'\n  })\n  role: number\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getByUsername\n                            \n                            \n                                    Async\n                                list\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateByUsername\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadSingle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByUsername(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Get(':username')@ApiOperation({summary: '获取用户信息'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Get()@ApiOperation({summary: '用户列表'})@UseInterceptors(new RbacInterceptor())\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiOperation({summary: '注册账号'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateByUsername(username: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @LoginRequired()@Put(':username')@ApiOperation({summary: '更新用户信息'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(files, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('mul-upload')@UseInterceptors(undefined)@ApiOperation({summary: '上传多个文件接口'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadSingle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadSingle(file, data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpException, HttpStatus,\n  Param,\n  Post,\n  Put,\n  UploadedFile,\n  UploadedFiles,\n  UseInterceptors, UsePipes,\n} from '@nestjs/common';\nimport { User as UserSchema } from './users.model'\nimport { ApiConsumes, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { ModelType } from '@typegoose/typegoose/lib/types';\nimport { UsersService } from './users.service';\nimport { RegisterUserDto } from './dtos/register-user.dto';\nimport { AuthService } from '../auth/auth.service';\nimport { LoginUserDto } from './dtos/login-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto';\nimport { RbacInterceptor } from '../interceptor/rbac.interceptor';\nimport { RoleConstants } from './constants/role.constants';\nimport { LoginRequired } from '../decorator/auth.decorator';\nimport { FileInterceptor, FilesInterceptor } from '@nestjs/platform-express';\nimport { createWriteStream } from 'fs';\nimport { doc } from 'prettier';\nimport path = require('path')\nimport multer = require('multer');\n\n\n@Controller('users')\n@ApiTags(\"用户模块\")\nexport class UsersController {\n  constructor(@InjectModel(UserSchema) private readonly UserModel: ModelType,\n              private readonly usersService: UsersService,\n              private readonly authService: AuthService) {\n  }\n\n  @LoginRequired()\n  @Get()\n  @ApiOperation({summary: '用户列表'})\n  @UseInterceptors(new RbacInterceptor(RoleConstants.ADMIN))\n  async list() {\n    return this.usersService.listUser()\n  }\n\n  @Post('register')\n  @ApiOperation({\n    summary: '注册账号'\n  })\n  async register(@Body() registerUserDto: RegisterUserDto) {\n    return this.usersService.register(registerUserDto)\n  }\n\n  @Post('login')\n  async login(@Body() loginUserDto: LoginUserDto) {\n    const authResult = await this.authService.validateUser(\n      loginUserDto.username,\n      loginUserDto.password\n    );\n    switch (authResult.code) {\n      case 1:\n        return this.authService.certificate(authResult.user)\n      case 2:\n        return {\n          code: 500,\n          msg: '用户名或密码错误'\n        }\n      default:\n        return {\n          code: 500,\n          msg: '查无此人'\n        }\n    }\n  }\n\n\n  @LoginRequired()\n  @Get(':username')\n  @ApiOperation({\n    summary: '获取用户信息'\n  })\n  async getByUsername(@Param(\"username\") username: string) {\n    return this.usersService.findByUsername(username)\n  }\n\n  @LoginRequired()\n  @Put(':username')\n  @ApiOperation({\n    summary: '更新用户信息'\n  })\n  async updateByUsername(@Param('username') username: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.updateByUsername(username, updateUserDto)\n\n  }\n  \n  @Post(\"upload\")\n  @UseInterceptors(FileInterceptor('file', {\n    storage: multer.diskStorage({\n      destination: (req, file, cb) => {\n        cb(null, path.join('/Users/kk/nodeJs/nest/nest-blog-api/upload'))\n      },\n      filename: (req, file, cb) => {\n        cb(null, file.originalname)\n      }\n    })\n  }))\n  @ApiConsumes('multipart/form-data')\n  async uploadSingle(@UploadedFile() file, @Body() data) {\n    if (!data.name) {\n      throw new BadRequestException(\"请求参数错误\")\n    }\n    return file\n  }\n  \n  @Post('mul-upload')\n  @UseInterceptors(FilesInterceptor('files'))\n  @ApiOperation({\n    summary: '上传多个文件接口'\n  })\n  async uploadFile(@UploadedFiles() files, @Body() data) {\n    if (!data.name || files.length === 0) {\n      throw new HttpException(\"请求参数错误\", HttpStatus.BAD_REQUEST)\n    }\n    for (const file of files) {\n      // @ts-ignore\n      const writeImage = createWriteStream(path.join('/Users/kk/nodeJs/nest/nest-blog-api/upload', `${data.name}-${Date.now()}-${file.originalname}`))\n      writeImage.write(file.buffer)\n    }\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nUsersModule -->\n\nLocalStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { TypegooseModule } from 'nestjs-typegoose';\nimport { User } from './users.model';\nimport { UsersService } from './users.service';\nimport { AuthService } from '../auth/auth.service';\nimport { AuthModule } from '../auth/auth.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from '../auth/constants';\nimport { LocalStrategy } from '../auth/local.strategy';\nimport { JwtStrategy } from '../auth/jwt.strategy';\n\n@Module({\n  imports: [\n    TypegooseModule.forFeature([User]),\n    PassportModule.register({defaultStrategy: 'jwt'}),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '8h' }\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, AuthService, LocalStrategy, JwtStrategy],\n  exports: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                listUser\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateByUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(UserModel: ModelType)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        UserModel\n                                                  \n                                                        \n                                                                        ModelType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            listUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listUser()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateByUsername\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateByUsername(username: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from 'nestjs-typegoose';\nimport { User as UserSchema } from './users.model';\nimport { ModelType } from '@typegoose/typegoose/lib/types';\nimport { RegisterUserDto } from './dtos/register-user.dto';\nimport { encryptPassword, makeSalt } from '../utils/cryptogram';\nimport { UpdateUserDto } from './dtos/update-user.dto';\nimport { RoleConstants } from './constants/role.constants';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(UserSchema) private readonly UserModel: ModelType) {\n  }\n\n  async listUser(): Promise {\n    return await this.UserModel.find()\n  }\n\n  async register(registerUserDto: RegisterUserDto): Promise {\n    const { username, password, name } = registerUserDto\n    const user_count = await this.UserModel.find({\n      username\n    }).count()\n\n    if (user_count) {\n      return {\n        code: 400,\n        msg: '用户已存在'\n      }\n    }\n    const salt = makeSalt()\n    registerUserDto.password = encryptPassword(password, salt)\n    registerUserDto.salt = salt\n    registerUserDto.role = RoleConstants.NORMAL\n    try {\n      await this.UserModel.create(registerUserDto)\n      return {\n        code: 200,\n        msg: '注册成功'\n      }\n    } catch (e) {\n      return {\n        code: 503,\n        msg: '注册账号失败'\n      }\n    }\n  }\n\n  async findByUsername(username: string) {\n    const users = await this.UserModel.find({\n      username\n    })\n    if (users.length) {\n      return users[0]\n    } else {\n      return {}\n    }\n  }\n\n  async updateByUsername(username: string, updateUserDto: UpdateUserDto) {\n    const users = await this.UserModel.find({username})\n    if (users.length) {\n      const userId = users[0]._id\n      await this.UserModel.findByIdAndUpdate(userId, updateUserDto)\n      return {\n        code: 200,\n        msg: '更新成功'\n      }\n    } else {\n      return {\n        code: 500,\n        msg: '未找到该用户'\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/log4js.ts\n            \n            variable\n            baseLogPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                config/log4js.ts\n            \n            variable\n            log4jsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/decorator/auth.decorator.ts\n            \n            function\n            LoginRequired\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/pagination.decorator.ts\n            \n            variable\n            Pagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filter/any-exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filter/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/rbac.interceptor.ts\n            \n            injectable\n            RbacInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/dtos/send-email.dto.ts\n            \n            class\n            SendEmailDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/model/base.model.ts\n            \n            class\n            BaseModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/model/error.model.ts\n            \n            class\n            ErrorResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/model/success.model.ts\n            \n            class\n            SuccessResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/dtos/update-post.dto.ts\n            \n            class\n            UpdatePostDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/post.model.ts\n            \n            class\n            Post\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/posts/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/constants/role.constants.ts\n            \n            variable\n            RoleConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dtos/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/users.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            encryptPassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            makeSalt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            class\n            ContextTrace\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.5.1\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @typegoose/typegoose : ^7.3.0\n        \n            @types/mongoose : ^5.7.32\n        \n            cache-manager : ^3.3.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            csurf : ^1.11.0\n        \n            express-rate-limit : ^5.1.3\n        \n            helmet : ^3.23.3\n        \n            log4js : ^6.3.0\n        \n            moment : ^2.27.0\n        \n            mongoose : ^5.9.25\n        \n            multer : ^1.4.2\n        \n            nestjs-redis : ^1.2.8\n        \n            nestjs-typegoose : ^7.1.28\n        \n            nodemailer : ^6.4.10\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            stacktrace-js : ^2.0.2\n        \n            start-server-webpack-plugin : ^2.2.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            ts-loader : ^6.2.2\n        \n            webpack : ^4.44.0\n        \n            webpack-cli : ^3.3.12\n        \n            webpack-node-externals : 1.7.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggerLevel   (src/.../log4js.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/log4js.ts\n    \n        \n            \n                \n                    \n                        \n                        LoggerLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 MARK\n                            \n                        \n                        \n                            \n                                Value : MARK\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                Value : TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                Value : FATAL\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : OFF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            encryptPassword   (src/.../cryptogram.ts)\n                        \n                        \n                            LoginRequired   (src/.../auth.decorator.ts)\n                        \n                        \n                            makeSalt   (src/.../cryptogram.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/cryptogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            encryptPassword\n                        \n                        \n                    \n                \n            \n            \n                \nencryptPassword(password, salt)\n                \n            \n\n\n\n\n            \n                \n                    Encrypt password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码\n\n                                    \n                                \n                                \n                                    salt\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码盐\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            makeSalt\n                        \n                        \n                    \n                \n            \n            \n                \nmakeSalt()\n                \n            \n\n\n\n\n            \n                \n                    Make salt\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    src/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            LoginRequired\n                        \n                        \n                    \n                \n            \n            \n                \nLoginRequired()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nUsersModule -->\n\nAuthService->UsersModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\nUsersModule -->\n\nLocalStrategy->UsersModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseLogPath   (config/.../log4js.ts)\n                        \n                        \n                            CurrentUser   (src/.../user.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            log4jsConfig   (config/.../log4js.ts)\n                        \n                        \n                            logger   (src/.../log4js.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Pagination   (src/.../pagination.decorator.ts)\n                        \n                        \n                            RoleConstants   (src/.../role.constants.ts)\n                        \n                        \n                            UserSchema   (src/.../users.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/log4js.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseLogPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : path.resolve(__dirname, '../../logs')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log4jsConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  appenders: {\n    console: {\n      type: 'console', // 会打印到控制台\n    },\n    access: {\n      type: 'dateFile', // 会写入文件，并按照日期分类\n      filename: `${baseLogPath}/access/access.log`, // 日志文件名，会命名为：access.20200320.log\n      alwaysIncludePattern: true,\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      numBackups: 3,\n      category: 'http',\n      keepFileExt: true, // 是否保留文件后缀\n    },\n    app: {\n      type: 'dateFile',\n      filename: `${baseLogPath}/app-out/app.log`,\n      alwaysIncludePattern: true,\n      layout: {\n        type: 'pattern',\n        pattern:\n          '{\"date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m\\'}',\n      },\n      // 日志文件按日期（天）切割\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      // maxLogSize: 10485760,\n      numBackups: 3,\n      keepFileExt: true,\n    },\n    errorFile: {\n      type: 'dateFile',\n      filename: `${baseLogPath}/errors/error.log`,\n      alwaysIncludePattern: true,\n      layout: {\n        type: 'pattern',\n        pattern:\n          '{\"date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m\\'}',\n      },\n      // 日志文件按日期（天）切割\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      // maxLogSize: 10485760,\n      numBackups: 3,\n      keepFileExt: true,\n    },\n    errors: {\n      type: 'logLevelFilter',\n      level: 'ERROR',\n      appender: 'errorFile',\n    },\n  },\n  categories: {\n    default: {\n      appenders: ['console', 'app', 'errors'],\n      level: 'DEBUG',\n    },\n    info: { appenders: ['console', 'app', 'errors'], level: 'info' },\n    access: { appenders: ['console', 'app', 'errors'], level: 'info' },\n    http: { appenders: ['access'], level: 'DEBUG' },\n  },\n  pm2: true, // 使用 pm2 来管理项目时，打开\n  pm2InstanceVar: 'INSTANCE_ID', // 会根据 pm2 分配的 id 进行区分，以免各进程在写日志时造成冲突\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorator/user.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n    const user = request.user\n    return data ? user && user[data] : user\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: 'liyuankun234', // 秘钥\n}\n                        \n                    \n\n\n            \n        \n\n    src/utils/log4js.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Log4js.getLogger()\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/decorator/pagination.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest()\n    let query = request.query\n    let result = {}\n    if (!query.pageSize) {\n      result['pageSize'] = 1\n    } else {\n      result['pageSize'] = Number.parseInt(query.pageSize)\n    }\n    if (!query.current) {\n      result['current'] = 1\n    } else {\n      result['current'] = Number.parseInt(query.current)\n    }\n    return result\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/users/constants/role.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RoleConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  NORMAL: 1,\n  ADMIN: 2\n}\n                        \n                    \n\n\n            \n        \n\n    src/users/schemas/users.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n  username: String,\n  password: Number,\n  name: String,\n  salt: String,\n  role: Number,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
